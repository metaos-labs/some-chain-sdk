{"version":3,"file":"some-chain-sdk.esm.js","sources":["../src/api/APIRequester.ts","../src/api/BaseAPI.ts","../src/api/BankAPI.ts","../src/api/AuthAPI.ts","../src/api/SwapAPI.ts","../src/api/TxAPI.ts","../src/utils/crypto.ts","../src/utils/deepCopy.ts","../src/utils/encrypt.ts","../src/constants/tokenlist.default.ts","../src/utils/findToken.ts","../src/constants/date.ts","../src/constants/fee.ts","../src/constants/network.ts","../src/constants/number.ts","../src/constants/precision.ts","../src/constants/tick.ts","../src/utils/formatCurrencyAmount.ts","../src/utils/formatMoment.ts","../src/utils/formatPrice.ts","../src/utils/getPoolAddress.ts","../src/utils/getToPercent.ts","../src/utils/isNumberic.ts","../src/utils/mathUtil.ts","../src/utils/parseToMap.ts","../src/utils/sort.ts","../src/utils/toPercent.ts","../src/utils/decimalNumber.ts","../src/types/ICommon.ts","../src/types/IWallet.ts","../src/core/LiquidityMath.ts","../src/core/TickMath.ts","../src/core/TransactionLooper.ts","../src/clients/APIClient.ts","../src/msgs/BaseMsg.ts","../src/proto/swap/tx.ts","../src/msgs/SwapMsg.ts","../src/proto/cosmos/crypto/secp256k1/keys.ts","../src/proto/google/protobuf/any.ts","../src/proto/cosmos/crypto/multisig/v1beta1/multisig.ts","../src/proto/cosmos/tx/signing/v1beta1/signing.ts","../src/proto/cosmos/base/v1beta1/coin.ts","../src/proto/cosmos/tx/v1beta1/tx.ts","../src/clients/TxClient.ts"],"sourcesContent":["import Axios, { AxiosInstance } from \"axios\";\nimport { OrderBy } from \"../proto/cosmos/tx/v1beta1/service\";\n\nexport type APIParams = Record<string, string | number | null | undefined>;\n\nexport interface PaginationOptions {\n  \"pagination.limit\": string;\n  \"pagination.offset\": string;\n  \"pagination.key\": string;\n  \"pagination.count_total\": \"true\" | \"false\";\n  \"pagination.reverse\": \"true\" | \"false\";\n  order_by: keyof typeof OrderBy;\n}\n\nexport interface Pagination {\n  next_key: string | null;\n  total: number;\n}\n\nexport class APIRequester {\n  private axios: AxiosInstance;\n\n  constructor(baseURL: string) {\n    this.axios = Axios.create({\n      baseURL,\n      headers: {\n        Accept: \"application/json\",\n      },\n      timeout: 60000,\n    });\n  }\n\n  public async get<T>(\n    endpoint: string,\n    params: URLSearchParams | APIParams = {}\n  ): Promise<T> {\n    return this.axios.get(endpoint, { params }).then((d) => d.data);\n  }\n\n  public async post<T>(endpoint: string, data?: APIParams): Promise<T> {\n    return this.axios.post(endpoint, data).then((d) => d.data);\n  }\n}\n","import { APIRequester } from \"./APIRequester\";\n\nexport abstract class BaseAPI {\n  constructor(protected request: APIRequester) {}\n}\n","import { BaseAPI } from \"./BaseAPI\";\nimport { IToken } from \"../types\";\n\nexport interface IResBalances {\n  balance: {\n    denom: string;\n    amount: string;\n  };\n}\n\nexport class BankAPI extends BaseAPI {\n  public async apiTokenBalance(\n    token: IToken,\n    accountAddress: string\n  ): Promise<IResBalances> {\n    return this.request.get<IResBalances>(\n      `/cosmos/bank/v1beta1/balances/${accountAddress}/by_denom`,\n      {\n        denom: token.denom,\n      }\n    );\n  }\n\n  public async apiAccountBalance(\n    accountAddress: string\n  ): Promise<IResBalances> {\n    return this.request.get<IResBalances>(\n      `/cosmos/bank/v1beta1/balances/${accountAddress}`\n    );\n  }\n}\n","import { BaseAPI } from \"./BaseAPI\";\n\nexport interface IResAccountInfo {\n  account: {\n    \"@type\": string;\n    base_account: {\n      address: string;\n      pub_key: {\n        \"@type\": string;\n        key: string;\n      };\n      account_number: string;\n      sequence: string;\n    };\n    code_hash: string;\n  };\n}\n\nexport class AuthAPI extends BaseAPI {\n  public async apiAccountInfo(\n    accountAddress: string\n  ): Promise<IResAccountInfo> {\n    return this.request.get<IResAccountInfo>(\n      `/cosmos/auth/v1beta1/accounts/${accountAddress}`\n    );\n  }\n}\n","import { BaseAPI } from \"./BaseAPI\";\nimport { ILiquidityPosition, IPool, IPoolPrice } from \"../types\";\n\nexport interface IResPoolInfo {\n  pool: IPool;\n  pool_slot0: IPoolPrice;\n}\n\nexport interface IResPoolMetadataNew {\n  [pool: string]: IPool;\n}\n\nexport interface IFarmV3 {\n  address: string;\n}\n\nexport interface IResFarmList {\n  activatingPool: Array<IFarmV3>;\n  pagination: {\n    next_key: null | string;\n    total: string;\n  };\n}\n\nexport interface IResLiquidityPositionList {\n  liquidity_positions: Array<ILiquidityPosition>;\n}\n\nexport class SwapAPI extends BaseAPI {\n  /**\n   * find pool list by address array\n   * @param addresses\n   */\n  public async apiPoolListByAddresses(\n    addresses: Array<string>\n  ): Promise<{ pool_slot0_aggregations: Array<IResPoolInfo> }> {\n    return this.request.get<{ pool_slot0_aggregations: Array<IResPoolInfo> }>(\n      `/sophon-labs/sophon/swap/pool_slot0_aggregations?${addresses.join(\"&\")}`\n    );\n  }\n\n  public async apiPoolMetadataByAddress(\n    address: string\n  ): Promise<IResPoolMetadataNew> {\n    return this.request.get<IResPoolMetadataNew>(\n      `/sophon-labs/sophon/swap/pools/${address}`\n    );\n  }\n\n  public async apiPoolMetadataPriceByAddress(\n    address: string\n  ): Promise<{ pool_slot0: IPoolPrice }> {\n    return this.request.get<{ pool_slot0: IPoolPrice }>(\n      `/sophon-labs/sophon/swap/pools/${address}/slot0`\n    );\n  }\n\n  public async apiLiquidityPositionById(\n    tokenId: string\n  ): Promise<{ liquidity_position: ILiquidityPosition }> {\n    return this.request.get<{ liquidity_position: ILiquidityPosition }>(\n      `/sophon-labs/sophon/swap/liquidity_positions/${tokenId}`\n    );\n  }\n\n  public async apiLiquidityRewardsByIds(\n    tokenIds: Array<string>\n  ): Promise<{ liquidity_positions: Array<ILiquidityPosition> }> {\n    return this.request.get<{ liquidity_positions: Array<ILiquidityPosition> }>(\n      `/sophon-labs/sophon/swap/liquidity_position_by_ids?${tokenIds.join(\"&\")}`\n    );\n  }\n\n  public async apiTickImagePath(tokenId: string): Promise<{ uri: string }> {\n    return this.request.get<{ uri: string }>(\n      `/sophon-labs/sophon/swap/liquidity_positions/${tokenId}/token_uri`\n    );\n  }\n\n  public async apiActiveFarmList(): Promise<IResFarmList> {\n    return this.request.get<IResFarmList>(\n      `/sophon-labs/sophon/swap/activating_pools`\n    );\n  }\n\n  public async apiLiquidityPositionList(\n    accountAddress: string\n  ): Promise<IResLiquidityPositionList> {\n    return this.request.get<IResLiquidityPositionList>(\n      `/sophon-labs/sophon/swap/liquidity_positions_owner/${accountAddress}`\n    );\n  }\n}\n","import { BaseAPI } from \"./BaseAPI\";\nimport { TxResponse } from \"../proto/cosmos/base/abci/v1beta1/abci\";\nimport {\n  BroadcastMode,\n  BroadcastTxRequest,\n  BroadcastTxResponse,\n} from \"../proto/cosmos/tx/v1beta1/service\";\n\nexport class TxAPI extends BaseAPI {\n  public async txInfo(txHash: string): Promise<TxResponse> {\n    return this.request.get<TxResponse>(`/cosmos/tx/v1beta1/txs/${txHash}`);\n  }\n\n  private async _broadcast<T>(\n    tx: BroadcastTxRequest,\n    mode: keyof typeof BroadcastMode\n  ): Promise<T> {\n    return this.request.post<any>(`/cosmos/tx/v1beta1/txs`);\n  }\n\n  public async broadcast(tx: BroadcastTxRequest): Promise<BroadcastTxResponse> {\n    return this._broadcast<BroadcastTxResponse>(tx, \"BROADCAST_MODE_BLOCK\");\n  }\n}\n","export function to32(value: string) {\n  const arr = value.split(\",\");\n  const len = 32 - arr.length;\n  const result: Array<number> = [];\n  arr.forEach((item) => {\n    result.push(+item);\n  });\n  for (let i = 0; i < len; i++) {\n    result.unshift(0);\n  }\n  return result;\n}\n","export function deepCopy(source: Object) {\n  // if (typeof source != \"object\") {\n  //   return source;\n  // }\n  // if (source == null) {\n  //   return source;\n  // }\n  // const newObj = source.constructor === Array ? [] as Array<T> : {};\n  // for (const i in source) {\n  //   newObj[i] = deepCopy(source[i]);\n  // }\n  // return newObj;\n\n  return JSON.parse(JSON.stringify(source));\n}\n","export function encrypt(value: string, prefix = 6, suffix = 4) {\n  if (value) {\n    return value.substr(0, prefix) + \"...\" + value.substr(-suffix);\n  } else {\n    return value;\n  }\n}\n","export default [\n  {\n    denom: \"usop\",\n    creator: \"\",\n    name: \"Sophon\",\n    symbol: \"SOP\",\n    totalSupply: \"2000000000000000000000000000\",\n    decimal: 18,\n    logoURI: \"https://s2.coinmarketcap.com/static/img/coins/64x64/2025.png\",\n  },\n  {\n    denom: \"useth\",\n    creator: \"sop17gxqqequrm2rmehknpataddssugl4ef6auunuc\",\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n    totalSupply: \"2000000000000000000000000\",\n    decimal: 18,\n    logoURI: \"https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png\",\n  },\n  {\n    denom: \"ustake\",\n    creator: \"sop17gxqqequrm2rmehknpataddssugl4ef6auunuc\",\n    name: \"STAKE\",\n    symbol: \"STAKE\",\n    totalSupply: \"200000000000000000000000000\",\n    decimal: 8,\n    logoURI: \"https://s2.coinmarketcap.com/static/img/coins/64x64/5601.png\",\n  },\n  {\n    denom: \"ususdc\",\n    creator: \"sop17gxqqequrm2rmehknpataddssugl4ef6auunuc\",\n    name: \"USDC\",\n    symbol: \"USDC\",\n    totalSupply: \"200000000000000000000000000\",\n    decimal: 6,\n    logoURI: \"https://s2.coinmarketcap.com/static/img/coins/64x64/3408.png\",\n  },\n  {\n    denom: \"token/token1/3\",\n    creator: \"sop17gxqqequrm2rmehknpataddssugl4ef6auunuc\",\n    name: \"token1\",\n    symbol: \"token1\",\n    totalSupply: \"200000000000000000000000000\",\n    decimal: 18,\n    logoURI: \"https://s2.coinmarketcap.com/static/img/coins/64x64/4195.png\",\n  },\n  {\n    denom: \"token/token2/4\",\n    creator: \"sop17gxqqequrm2rmehknpataddssugl4ef6auunuc\",\n    name: \"token2\",\n    symbol: \"token2\",\n    totalSupply: \"200000000000000000000000000\",\n    decimal: 8,\n    logoURI: \"https://s2.coinmarketcap.com/static/img/coins/64x64/2280.png\",\n  },\n];\n","import { IToken } from \"../types\";\nimport DEFAULT_TOKEN_LIST from \"../constants/tokenlist.default\";\n\nexport function findTokenByDenom(tokenDenom?: string): IToken {\n  const tokens: Array<IToken> = DEFAULT_TOKEN_LIST;\n  const result = tokens.find((item) => item.denom === tokenDenom);\n  if (result) {\n    return result;\n  } else {\n    return DEFAULT_TOKEN_LIST[0];\n  }\n}\n\nexport function findTokenBySymbol(symbol: string): IToken {\n  const tokens: Array<IToken> = DEFAULT_TOKEN_LIST;\n  const result = tokens.find(\n    (item) => item.symbol.toUpperCase() === symbol.toUpperCase()\n  );\n  if (result) {\n    return result;\n  } else {\n    return DEFAULT_TOKEN_LIST[0];\n  }\n}\n","export const ONE_DAY_TO_SECONDS = 86400;\n\nexport const ONE_YEAR_TO_DAYS = 365;\n","export enum Fee_Amount {\n  LOW = 500,\n  MEDIUM = 3000,\n  HIGH = 10000,\n}\n\nexport const FEE_AMOUNT_DETAIL: Record<\n  Fee_Amount,\n  { label: string; value: Fee_Amount; description: string }\n> = {\n  [Fee_Amount.LOW]: {\n    label: \"0.05\",\n    value: Fee_Amount.LOW,\n    description: \"Best for stable pairs.\",\n  },\n  [Fee_Amount.MEDIUM]: {\n    label: \"0.3\",\n    value: Fee_Amount.MEDIUM,\n    description: \"Best for most pairs.\",\n  },\n  [Fee_Amount.HIGH]: {\n    label: \"1\",\n    value: Fee_Amount.HIGH,\n    description: \"Best for exotic pairs.\",\n  },\n};\n","export const ETH = \"eth\";\nexport const BSC = \"bsc\";\nexport const OEC = \"oec\";\nexport const HOO = \"hoo\";\nexport const XDAI = \"xdai\";\nexport const HECO = \"heco\";\nexport const POLYGON = \"polygon\";\nexport const FANTOM = \"fantom\";\nexport const KCC = \"kcc\";\nexport const AVALANCHE = \"avalanche\";\nexport const SOPHON = \"sop\";\n\nexport const ETH_CHAIN_NAME = \"Ethereum\";\nexport const BSC_CHAIN_NAME = \"Binance Smart Chain\";\nexport const OEC_CHAIN_NAME = \"OKEx Chain\";\nexport const HOO_CHAIN_NAME = \"Hoo Smart Chain\";\nexport const XDAI_CHAIN_NAME = \"xDAI\";\nexport const HECO_CHAIN_NAME = \"Huobi ECO Chain\";\nexport const POLYGON_CHAIN_NAME = \"Polygon\";\nexport const FANTOM_CHAIN_NAME = \"Fantom\";\nexport const KCC_CHAIN_NAME = \"KCC\";\nexport const AVALANCHE_CHAIN_NAME = \"Avalanche\";\nexport const SOPHON_TEST_CHAIN_NAME = \"Sophon Dev\";\n\nexport const ETH_NETWORK_ID = \"1\";\nexport const BSC_NETWORK_ID = \"56\";\nexport const BSC_NETWORK_TEST_ID = \"97\";\nexport const OEC_NETWORK_ID = \"66\";\nexport const HOO_NETWORK_ID = \"70\";\nexport const XDAI_NETWORK_ID = \"100\";\nexport const HECO_NETWORK_ID = \"128\";\nexport const POLYGON_NETWORK_ID = \"137\";\nexport const FANTOM_NETWORK_ID = \"250\";\nexport const KCC_NETWORK_ID = \"321\";\nexport const AVALANCHE_NETWORK_ID = \"43114\";\nexport const ETH_TEST_NETWORK_ID = \"2117\";\nexport const SOPHON_TEST_NETWORK_ID = \"118\";\n\nexport const ETH_CHAIN_ID = \"0x1\";\nexport const BSC_CHAIN_ID = \"0x38\";\nexport const BSC_CHAIN_ID_TEST = \"0x61\";\nexport const OEC_CHAIN_ID = \"0x42\";\nexport const HOO_CHAIN_ID = \"0x46\";\nexport const XDAI_CHAIN_ID = \"0x64\";\nexport const HECO_CHAIN_ID = \"0x80\";\nexport const POLYGON_CHAIN_ID = \"0x89\";\nexport const FANTOM_CHAIN_ID = \"0xfa\";\nexport const KCC_CHAIN_ID = \"0x141\";\nexport const AVALANCHE_CHAIN_ID = \"0xa86a\";\nexport const SOPHON_TEST_CHAIN_ID = \"sophond_9000-1\";\n\nexport const ETH_SYMBOL = \"ETH\";\nexport const BNB_SYMBOL = \"BNB\";\nexport const OKT_SYMBOL = \"OKT\";\nexport const HOO_SYMBOL = \"HOO\";\nexport const XDAI_SYMBOL = \"XDAI\";\nexport const HT_SYMBOL = \"HT\";\nexport const POLYGON_SYMBOL = \"MATIC\";\nexport const FANTOM_SYMBOL = \"FTM\";\nexport const KCC_SYMBOL = \"KCS\";\nexport const AVALANCHE_SYMBOL = \"AVAX\";\nexport const SOPHON_SYMBOL = \"SOP\";\n\nexport const SUPPORTED_CHAIN_IDS = [ETH_NETWORK_ID, SOPHON_TEST_NETWORK_ID];\n\nexport const NETWORK_MAP = {\n  [ETH_NETWORK_ID]: {\n    networkId: ETH_NETWORK_ID,\n    chainId: ETH_CHAIN_ID,\n    chainName: ETH_CHAIN_NAME,\n    providerType: ETH,\n    ticker: ETH_SYMBOL,\n  },\n  [BSC_NETWORK_ID]: {\n    networkId: BSC_NETWORK_ID,\n    chainId: BSC_CHAIN_ID,\n    chainName: BSC_CHAIN_NAME,\n    providerType: BSC,\n    ticker: BNB_SYMBOL,\n  },\n  [BSC_NETWORK_TEST_ID]: {\n    networkId: BSC_NETWORK_TEST_ID,\n    chainId: BSC_CHAIN_ID_TEST,\n    chainName: BSC_CHAIN_NAME,\n    providerType: BSC,\n    ticker: BNB_SYMBOL,\n  },\n  [OEC_NETWORK_ID]: {\n    networkId: OEC_NETWORK_ID,\n    chainId: OEC_CHAIN_ID,\n    chainName: OEC_CHAIN_NAME,\n    providerType: OEC,\n    ticker: OKT_SYMBOL,\n  },\n  [HOO_NETWORK_ID]: {\n    networkId: HOO_NETWORK_ID,\n    chainId: HOO_CHAIN_ID,\n    chainName: HOO_CHAIN_NAME,\n    providerType: HOO,\n    ticker: HOO_SYMBOL,\n  },\n  [XDAI_NETWORK_ID]: {\n    networkId: XDAI_NETWORK_ID,\n    chainId: XDAI_CHAIN_ID,\n    chainName: XDAI_CHAIN_NAME,\n    providerType: XDAI,\n    ticker: XDAI_SYMBOL,\n  },\n  [HECO_NETWORK_ID]: {\n    networkId: HECO_NETWORK_ID,\n    chainId: HECO_CHAIN_ID,\n    chainName: HECO_CHAIN_NAME,\n    providerType: HECO,\n    ticker: HT_SYMBOL,\n  },\n  [POLYGON_NETWORK_ID]: {\n    networkId: POLYGON_NETWORK_ID,\n    chainId: POLYGON_CHAIN_ID,\n    chainName: POLYGON_CHAIN_NAME,\n    providerType: POLYGON,\n    ticker: POLYGON_SYMBOL,\n  },\n  [FANTOM_NETWORK_ID]: {\n    networkId: FANTOM_NETWORK_ID,\n    chainId: FANTOM_CHAIN_ID,\n    chainName: FANTOM_CHAIN_NAME,\n    providerType: FANTOM,\n    ticker: FANTOM_SYMBOL,\n  },\n  [KCC_NETWORK_ID]: {\n    networkId: KCC_NETWORK_ID,\n    chainId: KCC_CHAIN_ID,\n    chainName: KCC_CHAIN_NAME,\n    providerType: KCC,\n    ticker: KCC_SYMBOL,\n  },\n  [AVALANCHE_NETWORK_ID]: {\n    networkId: AVALANCHE_NETWORK_ID,\n    chainId: AVALANCHE_CHAIN_ID,\n    chainName: AVALANCHE_CHAIN_NAME,\n    providerType: AVALANCHE,\n    ticker: AVALANCHE_SYMBOL,\n  },\n  [SOPHON_TEST_NETWORK_ID]: {\n    networkId: SOPHON_TEST_NETWORK_ID,\n    chainId: SOPHON_TEST_CHAIN_ID,\n    chainName: SOPHON_TEST_CHAIN_NAME,\n    providerType: SOPHON,\n    ticker: SOPHON_SYMBOL,\n  },\n};\n\nexport const CONFIG_CHAIN_SOPHON = {\n  RPC_URL: \"\",\n  REST_URL: \"\",\n  EXPLORER_URL: \"https://explorer.evmos.org\",\n  NETWORK_NAME: \"Sophon TestNet\",\n  NETWORK_TYPE: \"testnet\",\n  CHAIN_ID: \"sophond_9000-1\",\n  CHAIN_NAME: \"Sophon Dev\",\n  COIN_DENOM: \"usop\",\n  COIN_MINIMAL_DENOM: \"SOP\",\n  COIN_DECIMALS: 18,\n  PREFIX: \"sophon\",\n  COIN_TYPE: 118,\n  COINGECKO_ID: \"sophon\",\n  DEFAULT_GAS: 1000000000,\n  GAS_PRICE_STEP_LOW: 0.005,\n  GAS_PRICE_STEP_AVERAGE: 0.025,\n  GAS_PRICE_STEP_HIGH: 0.08,\n  FEATURES: [\"stargate\", \"ibc-transfer\", \"sophon\"],\n};\n\nexport const CHAIN_ETH = {\n  chainId: \"0x1\",\n  name: \"Ethereum\",\n  logoURI:\n    \"https://assets.trustwalletapp.com/blockchains/smartchain/assets/0x2170Ed0880ac9A755fd29B2688956BD959F933F8/logo.png\",\n  symbol: \"ETH\",\n};\n\nexport const CHAIN_SOP = {\n  chainId: \"sophon\",\n  name: \"Sophon\",\n  logoURI:\n    \"https://assets.trustwalletapp.com/blockchains/smartchain/assets/0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51/logo.png\",\n  symbol: \"sop\",\n};\n","export const ZERO = \"0\";\n","export const DEFAULT_USER_PRECISION = 6;\n\nexport const DEFAULT_PRECISION = 18;\n\nexport const MAX_PRECISION = 28;\n\nexport const REG_NUMBER = new RegExp(\n  \"^[1-9]+[0-9]*(\\\\.\\\\d{0,\" + DEFAULT_PRECISION + \"})?$\"\n);\n\nexport const REG_DECIMAL_SIMPLE = /^\\d*(\\.\\d*)?$/;\n\nexport const REG_DECIMAL = new RegExp(\n  \"^0(\\\\.\\\\d{0,\" + DEFAULT_PRECISION + \"})?$\"\n);\n","export const TICK_SPACINGS = {\n  500: 10,\n  3000: 60,\n  10000: 200,\n};\n\nexport const BASE_UNIT_TICK = 1.0001;\n","import Decimal from \"decimal.js\";\nimport { Decimal as CosmosDecimal } from \"@cosmjs/math\";\nimport {\n  DEFAULT_PRECISION,\n  DEFAULT_USER_PRECISION,\n  MAX_PRECISION,\n} from \"../constants\";\n\nexport function toDecimalPlaces(\n  value: string | number | Decimal,\n  precision: number = DEFAULT_PRECISION\n) {\n  try {\n    return new Decimal(value)\n      .toDecimalPlaces(precision, Decimal.ROUND_UP)\n      .toString();\n  } catch (e) {\n    return String(value || \"-\");\n  }\n}\n\nexport function toAmountString(\n  value: Decimal.Value | undefined = \"\",\n  precision: number = DEFAULT_USER_PRECISION,\n  roundingMode: Decimal.Rounding = Decimal.ROUND_DOWN\n): string {\n  try {\n    return new Decimal(value)\n      .toSignificantDigits(precision, roundingMode)\n      .toString();\n  } catch (e) {\n    return String(value || \"-\");\n  }\n}\n\nexport function toAmountFloor(\n  value: string | number,\n  precision: number = DEFAULT_USER_PRECISION\n): string {\n  return toAmountString(value, precision, Decimal.ROUND_DOWN);\n}\n\nexport function toAmountCeil(\n  value: string | number,\n  precision: number = DEFAULT_USER_PRECISION\n) {\n  return toAmountString(value, precision, Decimal.ROUND_UP);\n}\n\nexport function toAmountFee(\n  value: string | number,\n  precision: number = DEFAULT_PRECISION\n): string {\n  try {\n    return new Decimal(value)\n      .toDecimalPlaces(precision, Decimal.ROUND_DOWN)\n      .toString();\n  } catch (e) {\n    return String(value || \"-\");\n  }\n}\n\nexport function isEmptyAmount(\n  value: Decimal.Value,\n  precision: number = MAX_PRECISION\n): boolean {\n  const _value = new Decimal(value).mul(Math.pow(10, precision)).floor();\n  return _value.isZero();\n}\n\nexport function toExactAmount(\n  value: string,\n  precision = MAX_PRECISION\n): string {\n  try {\n    return CosmosDecimal.fromUserInput(value, precision).toString();\n  } catch (e) {\n    return String(value || \"-\");\n  }\n}\n\nexport const formatNumber = (\n  value: Decimal.Value,\n  seperator: number = 3,\n  fixed: number = 2\n) => {\n  return `${new Decimal(value)\n    .div(new Decimal(10).pow(seperator))\n    .toFixed(fixed)}k`;\n};\n","import moment from \"moment\";\n\nmoment.locale(\"en-ca\");\n\nexport function formatMoment(value: string, pattern = \"YYYY/MM/DD HH:mm:ss\") {\n  return moment(+value).format(pattern);\n}\n\nexport function formatUnixMoment(value: string, pattern = \"MM/DD HH:mm:ss\") {\n  return moment(+value * 1000).format(pattern);\n}\n\nexport const formatTime = (time: string) => {\n  return moment(time).format(\"YYYY-MM-DD HH:mm:ss\");\n};\n\nexport const formatDiffTime = (time: string) => {\n  return moment(time).fromNow();\n};\n","import Decimal from \"decimal.js\";\n\nexport function toUsd(value: string | undefined): string | number {\n  if (!value) {\n    return 0;\n  }\n  return \"$\" + new Decimal(value).toFixed(2);\n}\n","import { Fee_Amount } from \"../constants\";\nimport { Bech32, toUtf8 } from \"@cosmjs/encoding\";\nimport { sha256 } from \"@cosmjs/crypto\";\n\nexport function getPoolAddress(\n  denom0: string,\n  denom1: string,\n  fee: Fee_Amount\n) {\n  let key;\n  if (denom0 > denom1) {\n    key = `${denom1}-${denom0}-${fee}`;\n  } else {\n    key = `${denom0}-${denom1}-${fee}`;\n  }\n  // console.log('poolAddress: ' + Bech32.encode('sop', sha256(toUtf8(key)).slice(0, 20)));\n  return Bech32.encode(\"sop\", sha256(toUtf8(key)).slice(0, 20));\n}\n","import { Fee_Amount, FEE_AMOUNT_DETAIL } from \"../constants\";\n\nexport function getPercentByFeeAmount(fee: Fee_Amount | undefined) {\n  if (fee) {\n    return `${FEE_AMOUNT_DETAIL[fee].label}%`;\n  } else {\n    return \"-\";\n  }\n}\n","import { REG_DECIMAL, REG_NUMBER, ZERO } from \"../constants\";\nimport Decimal from \"decimal.js\";\n\nexport function isNumeric(value: string) {\n  return !isNaN(parseFloat(value));\n  // return new Decimal(value).lessThan(ZERO);\n}\n\nexport function checkInputNumber(value: string) {\n  if (REG_NUMBER.test(value) || REG_DECIMAL.test(value) === true) {\n    return true;\n  }\n  return false;\n}\n","import Decimal from \"decimal.js\";\nimport { DEFAULT_PRECISION } from \"../constants\";\n\nexport function plus(value1: string, value2: string) {\n  return new Decimal(value1).plus(value2).toString();\n}\n\nexport function minus(value1: string | number, value2: string | number) {\n  return new Decimal(value1).minus(value2).toString();\n}\n\nexport function multipliedBy(value1: string | number, value2: string | number) {\n  return new Decimal(value1).mul(value2).toString();\n}\n\nexport function div(value1: string, value2: string): string {\n  return new Decimal(value1).div(value2).toString();\n}\n\nexport function isGreaterThan(value1: string, value2: string) {\n  return new Decimal(value1).greaterThanOrEqualTo(value2);\n}\n\nexport function isLessThan(value1: string, value2: string) {\n  return new Decimal(value1).lessThan(value2);\n}\n\nexport function isEqualTo(value1: string, value2: string) {\n  return new Decimal(value1).equals(value2);\n}\n\nexport function pow18(value: string): string {\n  return new Decimal(value).mul(Math.pow(10, DEFAULT_PRECISION)).toString();\n}\n\nexport function pow(\n  value: string | number | Decimal,\n  precision: number = DEFAULT_PRECISION,\n  round: Decimal.Rounding = Decimal.ROUND_DOWN\n): string {\n  if (value === \"\") {\n    return \"0\";\n  }\n  const _value = new Decimal(value).mul(Math.pow(10, precision));\n  if (round === Decimal.ROUND_UP) {\n    return _value.ceil().toString();\n  }\n  return _value.floor().toString();\n}\n\nexport function powM18(value: string | number) {\n  return new Decimal(value).div(Math.pow(10, DEFAULT_PRECISION)).toString();\n}\n\nexport function shift(value: string, precision: number = DEFAULT_PRECISION) {\n  return new Decimal(value).div(Math.pow(10, precision)).toString();\n}\n\nexport function isPositive(value: string | number) {\n  if (!value) {\n    return false;\n  }\n  return new Decimal(value).greaterThan(0);\n}\n","export function objectToMap<K, T>(source: Object) {\n  return new Map(Object.entries(source));\n}\n\nexport function arrayToMap<T, K extends keyof T>(array: Array<T>, property: K) {\n  const map = new Map<T[K], T>();\n  for (const item of array) {\n    map.set(item[property], item);\n  }\n  return map;\n}\n","import { IToken } from \"../types\";\n\nexport function sortsBefore(baseToken: IToken, quoteToken: IToken) {\n  return baseToken.denom.toLowerCase() < quoteToken.denom.toLowerCase();\n}\n","import Decimal from \"decimal.js\";\nimport { isNumeric } from \"./isNumberic\";\n\n// export function toPercent(percent: number, balance: string) {\n//   return new Decimal(percent).div(100).mul(balance).toFixed(2);\n// }\n\nexport function percentage(value: string): string {\n  if (isNumeric(value)) {\n    return `${new Decimal(value).toFixed(2)}%`;\n  } else {\n    return value;\n  }\n}\n\nexport function toPercent(value: Decimal.Value): string {\n  try {\n    return `${new Decimal(value).mul(100).toFixed(2)}%`;\n  } catch (e) {\n    return value.toString();\n  }\n}\n","import Decimal from \"decimal.js\";\n\nexport const decimalNumber = (number = \" \") => {\n  const [int = \"\", float = \"\"] = number.toString().replace(\"$\", \"\").split(\".\");\n\n  if (int.length > 10) {\n    return `${new Decimal(int).div(new Decimal(10).pow(10)).toFixed(2)}B`;\n  } else if (int.length > 7) {\n    return `${new Decimal(int).div(new Decimal(10).pow(7)).toFixed(2)}M`;\n  } else if (int.length > 3) {\n    return `${new Decimal(int).div(new Decimal(10).pow(3)).toFixed(2)}K`;\n  } else {\n    return `${Number(int) > 0 ? int : 0}.${\n      float.length > 0 ? float.slice(0, 2) : \"00\"\n    }`;\n  }\n};\n","import { IToken } from \"./IToken\";\nimport { Fee_Amount } from \"../constants\";\n\nexport interface ITickProcessed {\n  tick: number;\n  liquidityActive: string;\n  liquidityNet: string;\n  price0: string;\n}\n\nexport interface ITickData {\n  tick_idx: number;\n  liquidity_gross: string;\n  liquidity_net: string;\n  price0: string;\n  price1: string;\n}\n\ntype Pick<T, K extends keyof T> = {\n  [P in K]: T[P];\n};\n\nexport enum Bound {\n  LOWER = \"LOWER\",\n  UPPER = \"UPPER\",\n}\n\nexport interface IFeeItem {\n  label: string;\n  value: Fee_Amount;\n  description: string;\n}\n\nexport enum Tip_Level {\n  Info = \"info\",\n  Warning = \"warning\",\n  Error = \"error\",\n}\n\nexport enum Swap_Direction {\n  In = \"exactIn\",\n  Out = \"exactOut\",\n}\n\nexport enum Transaction_Status {\n  Wallet = \"wallet\",\n  Pending = \"pending\",\n  Complete = \"complete\",\n  Success = \"success\",\n  Error = \"error\",\n  Reject = \"reject\",\n}\n\nexport interface ILiquidityPosition {\n  token_id: string;\n  address: string;\n  liquidity: string;\n  fee_growth_inside0_last: string;\n  fee_growth_inside1_last: string;\n  tokens_owed0: string;\n  tokens_owed1: string;\n  tick_lower: number;\n  tick_upper: number;\n  reward_growth_inside_lasts: Array<string>;\n  reward_oweds: Array<string>;\n}\n\nexport interface IPool {\n  address: string;\n  denom0: string;\n  denom1: string;\n  decimal0: number;\n  decimal1: number;\n  fee: number;\n  tick_spacing: number;\n  max_liquidity_per_tick: string;\n}\n\nexport interface IV3RewardConfig {\n  denom: string;\n  mintable: boolean;\n  operator: string;\n  reward_growth_global: string;\n  reward_per_second: string;\n  vault: string;\n  token?: IToken;\n  reward_per_day?: string;\n}\n\nexport interface IV3Reward extends IV3RewardConfig {\n  amount: string;\n  token?: IToken;\n}\n\nexport interface IPoolPrice {\n  address: string;\n  tick: number;\n  sqrt_price: string;\n  liquidity: string;\n  fee_growth_global0: string;\n  fee_growth_global1: string;\n  fee_protocol_owed0: string;\n  fee_protocol_owed1: string;\n  observation_index: number;\n  observation_cardinality: number;\n  observation_cardinality_next: number;\n  reward_configs: Array<IV3RewardConfig>;\n  reward_update_time_last: string;\n}\n\nexport interface IPoolMetaData extends IPool, IPoolPrice {}\n","import { DeliverTxResponse } from \"@cosmjs/stargate\";\nimport { Transaction_Status } from \"./ICommon\";\n\nexport type DeepPartial<T> = T extends object\n  ? {\n      [P in keyof T]?: DeepPartial<T[P]>;\n    }\n  : T;\n\nexport type BroadcastResult = DeliverTxResponse;\n\nexport interface ITransaction {\n  transactionHash: string;\n  description: string;\n  status: Transaction_Status;\n}\n\nexport function longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n  }\n  return long.toNumber();\n}\n","import { IToken } from \"../types\";\nimport { toDecimalPlaces } from \"../utils\";\nimport Decimal from \"decimal.js\";\n\nexport class LiquidityMath {\n  private static getRightSideLiquidity(\n    leftRangeValue: number, // pa\n    rightRangeValue: number, // pb\n    priceValue: number,\n    amount: string\n  ): Decimal {\n    const numerator = new Decimal(amount);\n    const _value1 = new Decimal(1).div(Decimal.sqrt(leftRangeValue));\n    const _value2 = new Decimal(1).div(Decimal.sqrt(rightRangeValue));\n    const denominator = Decimal.sub(_value1, _value2);\n    return numerator.div(denominator);\n  }\n\n  private static getLeftSideLiquidity(\n    leftRangeValue: number, // pa\n    rightRangeValue: number, // pb\n    priceValue: number,\n    amount: string\n  ): Decimal {\n    const numerator = new Decimal(amount);\n    const denominator = Decimal.sub(\n      Decimal.sqrt(rightRangeValue),\n      Decimal.sqrt(leftRangeValue)\n    );\n    return numerator.div(denominator);\n  }\n\n  public static getLiquidityFromAmount0(\n    leftRangeValue: number, // pa\n    rightRangeValue: number, // pb\n    priceValue: number,\n    amount0: string\n  ): Decimal {\n    const pc = new Decimal(priceValue);\n    if (pc.lessThan(leftRangeValue) === true) {\n      return this.getRightSideLiquidity(\n        leftRangeValue,\n        rightRangeValue,\n        priceValue,\n        amount0\n      );\n    } else if (pc.greaterThan(rightRangeValue) === true) {\n      return this.getLeftSideLiquidity(\n        leftRangeValue,\n        rightRangeValue,\n        priceValue,\n        amount0\n      );\n    }\n    const deltaX = new Decimal(amount0);\n    const _value1 = new Decimal(1).div(Decimal.sqrt(priceValue));\n    const _value2 = new Decimal(1).div(Decimal.sqrt(rightRangeValue));\n    const denominator = Decimal.sub(_value1, _value2);\n    return deltaX.div(denominator);\n  }\n\n  private static _getDiverForDeltaX(\n    lower: number | string,\n    upper: number | string\n  ): Decimal {\n    const _value1 = new Decimal(1).div(Decimal.sqrt(lower));\n    const _value2 = new Decimal(1).div(Decimal.sqrt(upper));\n    return Decimal.sub(_value1, _value2);\n  }\n\n  private static _getDiverForDeltaY(\n    lower: number | string,\n    upper: number | string\n  ) {\n    return Decimal.sub(Decimal.sqrt(upper), Decimal.sqrt(lower));\n  }\n\n  public static getLiquidityFromAmount1(\n    leftRangeValue: number, // pa\n    rightRangeValue: number, // pb\n    priceValue: number,\n    amount1: string\n  ): Decimal {\n    const pc = new Decimal(priceValue);\n\n    if (pc.lessThan(leftRangeValue) === true) {\n      return this.getRightSideLiquidity(\n        leftRangeValue,\n        rightRangeValue,\n        priceValue,\n        amount1\n      );\n    } else if (pc.greaterThan(rightRangeValue) === true) {\n      return this.getLeftSideLiquidity(\n        leftRangeValue,\n        rightRangeValue,\n        priceValue,\n        amount1\n      );\n    }\n\n    const deltaY = new Decimal(amount1);\n    const denominator = Decimal.sub(\n      Decimal.sqrt(priceValue),\n      Decimal.sqrt(leftRangeValue)\n    );\n    return deltaY.div(denominator);\n  }\n\n  public static getAmount1FromAmount0(\n    leftRangeValue: number, // pa\n    rightRangeValue: number, // pb\n    priceValue: number,\n    amount0: string,\n    token0: IToken\n  ): string {\n    const liquidity = this.getLiquidityFromAmount0(\n      leftRangeValue,\n      rightRangeValue,\n      priceValue,\n      amount0\n    );\n    console.log(\"liquidity: \" + liquidity);\n\n    const _value1 = new Decimal(liquidity);\n    const _value2 = this._getDiverForDeltaY(leftRangeValue, priceValue);\n    return _value1.mul(_value2).toString();\n  }\n\n  public static getAmount0FromAmount1(\n    leftRangeValue: number, // pa\n    rightRangeValue: number, // pb\n    priceValue: number,\n    amount1: string,\n    token1: IToken\n  ): string {\n    const liquidity = this.getLiquidityFromAmount1(\n      leftRangeValue,\n      rightRangeValue,\n      priceValue,\n      amount1\n    );\n\n    console.log(\"liquidity: \" + liquidity);\n\n    const _value1 = new Decimal(liquidity);\n    const _value2 = this._getDiverForDeltaX(priceValue, rightRangeValue);\n    return _value1.mul(_value2).toString();\n  }\n\n  public static getAmountByLiquidity(\n    leftRangeValue: number | string,\n    rightRangeValue: number | string,\n    priceValue: number | string,\n    liquidity: string,\n    token0: IToken,\n    token1: IToken\n  ): { amount0: string; amount1: string } {\n    const pc = new Decimal(priceValue);\n\n    const _value1 = new Decimal(liquidity);\n\n    if (pc.lessThan(leftRangeValue) === true) {\n      const _value2 = this._getDiverForDeltaX(leftRangeValue, rightRangeValue);\n      return {\n        amount0: toDecimalPlaces(_value1.mul(_value2), token0.decimal),\n        amount1: \"0\",\n      };\n    } else if (pc.greaterThan(rightRangeValue) === true) {\n      const _value2 = this._getDiverForDeltaY(leftRangeValue, rightRangeValue);\n      return {\n        amount0: \"0\",\n        amount1: toDecimalPlaces(_value1.mul(_value2), token1.decimal),\n      };\n    }\n    const deltaXDiver = this._getDiverForDeltaX(priceValue, rightRangeValue);\n    const deltaYDiver = this._getDiverForDeltaY(leftRangeValue, priceValue);\n    return {\n      amount0: toDecimalPlaces(_value1.mul(deltaXDiver), token0.decimal),\n      amount1: toDecimalPlaces(_value1.mul(deltaYDiver), token1.decimal),\n    };\n  }\n}\n","import invariant from \"tiny-invariant\";\nimport Decimal from \"decimal.js\";\nimport { Fee_Amount, TICK_SPACINGS, BASE_UNIT_TICK } from \"../constants\";\nimport { IToken } from \"../types\";\nimport { sortsBefore, toAmountString } from \"../utils\";\n\nexport class TickMath {\n  public static INVALID_TICK = -99999999;\n\n  public static MIN_TICK = -887272;\n\n  public static MIN_TICK_VALUE = \"0\";\n\n  public static MAX_TICK: number = -TickMath.MIN_TICK;\n\n  public static MAX_TICK_VALUE = \"∞\";\n\n  public static nearestUsableTick = (\n    tick: number,\n    tickSpacing: number\n  ): number => {\n    const rounded = Math.round(tick / tickSpacing) * tickSpacing;\n    if (rounded < TickMath.MIN_TICK) return rounded + tickSpacing;\n    else if (rounded > TickMath.MAX_TICK) return rounded - tickSpacing;\n    else return rounded;\n  };\n\n  private static priceToClosestTick(price: string): number {\n    const numerator = Decimal.log2(Decimal.sqrt(price));\n    const denominator = Decimal.log2(Decimal.sqrt(BASE_UNIT_TICK));\n    return numerator.div(denominator).toNumber();\n  }\n\n  /**\n   * Compute nearest tick of price for input\n   * @param feeAmount\n   * @param value\n   */\n  public static getNearestTickByPrice(\n    feeAmount: Fee_Amount,\n    value: string\n  ): number {\n    const _value = value.trim();\n    if (_value === \"\") {\n      return this.INVALID_TICK;\n    }\n    if (value === this.MIN_TICK_VALUE) {\n      return this.MIN_TICK;\n    }\n    if (value === this.MAX_TICK_VALUE) {\n      return this.MAX_TICK;\n    }\n    const tick: number = this.priceToClosestTick(value);\n    // console.log(`[priceToClosestTick]: ` + tick);\n    const result = this.nearestUsableTick(tick, TICK_SPACINGS[feeAmount]);\n    // console.log(`[nearestUsableTick]: ` + result);\n    return result;\n  }\n\n  public static getFormattedPriceByTick(\n    tick: Decimal.Value,\n    fee: Fee_Amount\n  ): string {\n    if (tick === this.INVALID_TICK) {\n      return \"\";\n    }\n    if (this.isLowestTick(tick, fee)) {\n      return this.MIN_TICK_VALUE;\n    }\n    if (this.isHighestTick(tick, fee)) {\n      return this.MAX_TICK_VALUE;\n    }\n    const base = Decimal.pow(Decimal.sqrt(BASE_UNIT_TICK), tick);\n    return Decimal.pow(base, 2).toString();\n  }\n\n  public static getPriceByTick(tick: Decimal.Value): string {\n    if (tick === this.INVALID_TICK) {\n      return \"\";\n    }\n    // if (this.isLowestTick(tick, fee)) {\n    //   return this.MIN_TICK_VALUE;\n    // }\n    // if (this.isHighestTick(tick, fee)) {\n    //   return this.MAX_TICK_VALUE;\n    // }\n    const base = Decimal.pow(Decimal.sqrt(BASE_UNIT_TICK), tick);\n    return Decimal.pow(base, 2).toString();\n  }\n\n  public static getNearestPriceByInput(\n    feeAmount: Fee_Amount,\n    price: string\n  ): string {\n    // console.log('INPUT price: ' + price);\n    const nearestTick = this.getNearestTickByPrice(feeAmount, price);\n    const result = this.getPriceByTick(nearestTick);\n    // console.log('getPriceByTick: ' + result);\n    // console.log('==========');\n    return toAmountString(result);\n  }\n\n  public static getPriceBySqrtPrice(sqrtPrice: string): string {\n    if (!sqrtPrice) {\n      return \"\";\n    }\n    if (sqrtPrice === \"0\") {\n      return \"0\";\n    }\n    return new Decimal(sqrtPrice).pow(2).toString();\n  }\n\n  public static getSqrtPriceByPrice(price: string): string {\n    if (price === \"0\") {\n      return \"0\";\n    }\n    return new Decimal(price).sqrt().toString();\n  }\n\n  public static getBaseTickRange(\n    fromToken: IToken,\n    toToken: IToken,\n    fee: Fee_Amount,\n    leftRange: string,\n    rightRange: string\n  ): { tickLower: number; tickUpper: number } {\n    let tickLower: number;\n    let tickUpper: number;\n    if (sortsBefore(fromToken, toToken)) {\n      tickLower =\n        leftRange === TickMath.MIN_TICK_VALUE\n          ? TickMath.getNearestLowestTick(fee)\n          : TickMath.getNearestTickByPrice(fee, leftRange);\n      tickUpper =\n        rightRange === TickMath.MAX_TICK_VALUE\n          ? TickMath.getNearestHighestTick(fee)\n          : TickMath.getNearestTickByPrice(fee, rightRange);\n    } else {\n      if (leftRange === TickMath.MIN_TICK_VALUE) {\n        tickUpper = TickMath.getNearestHighestTick(fee);\n      } else {\n        tickUpper = TickMath.getNearestTickByPrice(\n          fee,\n          new Decimal(1).div(leftRange).toString()\n        );\n      }\n      if (rightRange === TickMath.MAX_TICK_VALUE) {\n        tickLower = TickMath.getNearestLowestTick(fee);\n      } else {\n        tickLower = TickMath.getNearestTickByPrice(\n          fee,\n          new Decimal(1).div(rightRange).toString()\n        );\n      }\n    }\n    console.log(\"tickLower: \" + tickLower);\n    console.log(\"tickUpper: \" + tickUpper);\n    return {\n      tickLower,\n      tickUpper,\n    };\n  }\n\n  public static getNearestLowestTick(fee: Fee_Amount): number {\n    const tickLower = this.nearestUsableTick(this.MIN_TICK, TICK_SPACINGS[fee]);\n    // console.log('getNearestLowestTick: ' + tickLower);\n    return tickLower;\n  }\n\n  public static getNearestHighestTick(fee: Fee_Amount): number {\n    const tickUpper = this.nearestUsableTick(this.MAX_TICK, TICK_SPACINGS[fee]);\n    // console.log('getNearestHighestTick: ' + tickUpper);\n    return tickUpper;\n  }\n\n  public static getNearestPricesByFullTick(fee: Fee_Amount): {\n    lowestPrice: string;\n    highestPrice: string;\n  } {\n    const tickLower = this.nearestUsableTick(this.MIN_TICK, TICK_SPACINGS[fee]);\n    const tickUpper = this.nearestUsableTick(this.MAX_TICK, TICK_SPACINGS[fee]);\n    const lowestPrice = this.getPriceByTick(tickLower);\n    const highestPrice = this.getPriceByTick(tickUpper);\n    return {\n      lowestPrice,\n      highestPrice,\n    };\n  }\n\n  public static isHighestTick(tick: Decimal.Value, fee: Fee_Amount): boolean {\n    const highestTick = this.getNearestHighestTick(fee);\n    return tick >= highestTick;\n  }\n\n  public static isLowestTick(tick: Decimal.Value, fee: Fee_Amount): boolean {\n    const lowestTick = this.getNearestLowestTick(fee);\n    return tick <= lowestTick;\n  }\n}\n","import { Transaction_Status } from \"../types\";\n\nexport class TransactionLooper {\n  transactionHash: string;\n  description: string;\n  status: Transaction_Status;\n  counter: number;\n  onTransactionSuccess: Function;\n\n  constructor(\n    txHash: string,\n    description: string,\n    status: Transaction_Status,\n    onTransactionSuccess: Function\n  ) {\n    this.transactionHash = txHash;\n    this.description = description;\n    this.status = status;\n    this.counter = 0;\n    this.onTransactionSuccess = onTransactionSuccess;\n  }\n}\n","import { APIRequester, TxAPI } from \"../api\";\nimport { BankAPI, AuthAPI, SwapAPI } from \"../api\";\nimport { CONFIG_CHAIN_SOPHON } from \"../constants\";\n\nexport class APIClient {\n  public apiRequester: APIRequester;\n\n  // API access\n  public bankAPI: BankAPI;\n  public authAPI: AuthAPI;\n  public swapAPI: SwapAPI;\n  public txAPI: TxAPI;\n  public nodeUrl: string;\n\n  constructor(URL: string, chainId: string = CONFIG_CHAIN_SOPHON.CHAIN_ID) {\n    this.nodeUrl = URL;\n    this.apiRequester = new APIRequester(URL);\n\n    // instantiate APIs\n    this.bankAPI = new BankAPI(this.apiRequester);\n    this.authAPI = new AuthAPI(this.apiRequester);\n    this.swapAPI = new SwapAPI(this.apiRequester);\n    this.txAPI = new TxAPI(this.apiRequester);\n  }\n}\n","import { EncodeObject, TxBodyEncodeObject } from \"@cosmjs/proto-signing\";\n\nexport abstract class BaseMsg {\n  constructor() {}\n  public abstract generateMessage(): EncodeObject;\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport { grpc } from \"@improbable-eng/grpc-web\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { BrowserHeaders } from \"browser-headers\";\n\nexport const protobufPackage = \"sophonlabs.sophon.swap\";\n\nexport interface MsgCreatePool {\n  creator: string;\n  /** the denom of denom0 in the pool */\n  denom0: string;\n  /** the denom of denom1 in the pool */\n  denom1: string;\n  /** the fee rate for the pool */\n  fee: number;\n  /** the initial square root price of the poo */\n  sqrtPrice: string;\n}\n\nexport interface MsgCreatePoolResponse {}\n\nexport interface MsgCreatePosition {\n  creator: string;\n  /** the denom of token0 in the pool */\n  denom0: string;\n  /** the denom of token1 in the pool */\n  denom1: string;\n  /** the fee rate for the pool */\n  fee: number;\n  /** the price lower bound of the position */\n  tickLower: number;\n  /** the price higher bound of the position */\n  tickUpper: number;\n  /** the desired amount of denom0 in the position */\n  amount0Desired: string;\n  /** the desired amount of denom1 in the position */\n  amount1Desired: string;\n  /** the minimum amount that denom0 needs to add when slippage occurs */\n  amount0Min: string;\n  /** the minimum amount that denom1 needs to add when slippage occurs */\n  amount1Min: string;\n  /** the minted NFT holder address */\n  recipient: string;\n  /** the time by which the transaction must be included to effect the change, unix time */\n  deadline: Long;\n}\n\nexport interface MsgCreatePositionResponse {}\n\nexport interface MsgIncreaseLiquidity {\n  /** the message creator, with tokens paid for the message */\n  creator: string;\n  /** then id of the NFT for which liquidity is being increased */\n  tokenId: string;\n  /** the desired amount of denom0 to be spent */\n  amount0Desired: string;\n  /** the desired amount of denom1 to be spent */\n  amount1Desired: string;\n  /** the minimum amount of denom0 to spend, which serves as a slippage check */\n  amount0Min: string;\n  /** the minimum amount of denom1 to spend, which serves as a slippage check */\n  amount1Min: string;\n  /** the time by which the transaction must be included to effect the change, unix time */\n  deadline: Long;\n}\n\nexport interface MsgIncreaseLiquidityResponse {}\n\nexport interface MsgDecreaseLiquidity {\n  creator: string;\n  /** then id of the NFT for which liquidity is being decreased */\n  tokenId: string;\n  /** the amount by which liquidity will be decreased */\n  liquidity: string;\n  /** the minimum amount of denom0 that should be accounted for the burned liquidity */\n  amount0Min: string;\n  /** the minimum amount of denom1 that should be accounted for the burned liquidity */\n  amount1Min: string;\n  /** the time by which the transaction must be included to effect the change, unix time */\n  deadline: Long;\n}\n\nexport interface MsgDecreaseLiquidityResponse {}\n\nexport interface MsgCollect {\n  creator: string;\n  /** the id of the NFT for which tokens are being collected */\n  tokenId: string;\n  /** the address that should receive the tokens */\n  recipient: string;\n  /** the maximum amount of denom0 to collect */\n  amount0Max: string;\n  /** the maximum amount of denom1 to collect */\n  amount1Max: string;\n  /** whether to get only owed tokens. True means only get the tokens that are owed(less gas), false means trigger settlement first, then collect(more gas) */\n  collectOnly: boolean;\n}\n\nexport interface MsgCollectResponse {}\n\nexport interface MsgSwapExactIn {\n  creator: string;\n  recipient: string;\n  amountIn: string;\n  amountOutMin: string;\n  denoms: string[];\n  fees: number[];\n  deadline: Long;\n}\n\nexport interface MsgSwapExactInResponse {}\n\nexport interface MsgSwapExactOut {\n  creator: string;\n  recipient: string;\n  amountOut: string;\n  amountInMax: string;\n  denoms: string[];\n  fees: number[];\n  deadline: Long;\n}\n\nexport interface MsgSwapExactOutResponse {}\n\nexport interface MsgSetOperator {\n  creator: string;\n  /** the pool address */\n  address: string;\n  /** the index of the reward config, starting at 0 */\n  index: number;\n  /** the new operator address, if empty, remove the operator */\n  operator: string;\n}\n\nexport interface MsgSetOperatorResponse {}\n\nexport interface MsgSetReward {\n  creator: string;\n  address: string;\n  index: number;\n  /** reward denom */\n  denom: string;\n  rewardPerSecond: string;\n  /**\n   * If it is true, it means that the reward will be issued by mint, otherwise the reward will be issued through the vault.\n   *\n   * If the balance of the vault is insufficient, only part of the reward will be issued.\n   */\n  mintable: boolean;\n  /** the reward config effective time */\n  triggerTime: Long;\n}\n\nexport interface MsgSetRewardResponse {}\n\nexport interface MsgCollectReward {\n  creator: string;\n  /** the id of the NFT for which tokens are being collected */\n  tokenId: string;\n  /** the address that should receive the tokens */\n  recipient: string;\n  /** whether to get only owed tokens. True means only get the tokens that are owed(less gas), false means trigger settlement first, then collect(more gas) */\n  collectOnly: boolean;\n}\n\nexport interface MsgCollectRewardResponse {}\n\nexport interface MsgCollectFeeProtocol {\n  creator: string;\n  /** the pool address */\n  address: string;\n}\n\nexport interface MsgCollectFeeProtocolResponse {}\n\nexport interface MsgGovBurn {\n  creator: string;\n  amount: string;\n}\n\nexport interface MsgGovBurnResponse {}\n\nexport interface MsgGovSwapExactIn {\n  creator: string;\n  amountIn: string;\n  amountOutMin: string;\n  denoms: string[];\n  fees: number[];\n  deadline: Long;\n}\n\nexport interface MsgGovSwapExactInResponse {}\n\nfunction createBaseMsgCreatePool(): MsgCreatePool {\n  return { creator: \"\", denom0: \"\", denom1: \"\", fee: 0, sqrtPrice: \"\" };\n}\n\nexport const MsgCreatePool = {\n  encode(\n    message: MsgCreatePool,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.denom0 !== \"\") {\n      writer.uint32(18).string(message.denom0);\n    }\n    if (message.denom1 !== \"\") {\n      writer.uint32(26).string(message.denom1);\n    }\n    if (message.fee !== 0) {\n      writer.uint32(32).int32(message.fee);\n    }\n    if (message.sqrtPrice !== \"\") {\n      writer.uint32(42).string(message.sqrtPrice);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreatePool {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreatePool();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.denom0 = reader.string();\n          break;\n        case 3:\n          message.denom1 = reader.string();\n          break;\n        case 4:\n          message.fee = reader.int32();\n          break;\n        case 5:\n          message.sqrtPrice = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgCreatePool {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      denom0: isSet(object.denom0) ? String(object.denom0) : \"\",\n      denom1: isSet(object.denom1) ? String(object.denom1) : \"\",\n      fee: isSet(object.fee) ? Number(object.fee) : 0,\n      sqrtPrice: isSet(object.sqrtPrice) ? String(object.sqrtPrice) : \"\",\n    };\n  },\n\n  toJSON(message: MsgCreatePool): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.denom0 !== undefined && (obj.denom0 = message.denom0);\n    message.denom1 !== undefined && (obj.denom1 = message.denom1);\n    message.fee !== undefined && (obj.fee = Math.round(message.fee));\n    message.sqrtPrice !== undefined && (obj.sqrtPrice = message.sqrtPrice);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCreatePool>, I>>(\n    object: I\n  ): MsgCreatePool {\n    const message = createBaseMsgCreatePool();\n    message.creator = object.creator ?? \"\";\n    message.denom0 = object.denom0 ?? \"\";\n    message.denom1 = object.denom1 ?? \"\";\n    message.fee = object.fee ?? 0;\n    message.sqrtPrice = object.sqrtPrice ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgCreatePoolResponse(): MsgCreatePoolResponse {\n  return {};\n}\n\nexport const MsgCreatePoolResponse = {\n  encode(\n    _: MsgCreatePoolResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgCreatePoolResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreatePoolResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgCreatePoolResponse {\n    return {};\n  },\n\n  toJSON(_: MsgCreatePoolResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCreatePoolResponse>, I>>(\n    _: I\n  ): MsgCreatePoolResponse {\n    const message = createBaseMsgCreatePoolResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgCreatePosition(): MsgCreatePosition {\n  return {\n    creator: \"\",\n    denom0: \"\",\n    denom1: \"\",\n    fee: 0,\n    tickLower: 0,\n    tickUpper: 0,\n    amount0Desired: \"\",\n    amount1Desired: \"\",\n    amount0Min: \"\",\n    amount1Min: \"\",\n    recipient: \"\",\n    deadline: Long.ZERO,\n  };\n}\n\nexport const MsgCreatePosition = {\n  encode(\n    message: MsgCreatePosition,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.denom0 !== \"\") {\n      writer.uint32(18).string(message.denom0);\n    }\n    if (message.denom1 !== \"\") {\n      writer.uint32(26).string(message.denom1);\n    }\n    if (message.fee !== 0) {\n      writer.uint32(32).int32(message.fee);\n    }\n    if (message.tickLower !== 0) {\n      writer.uint32(40).int32(message.tickLower);\n    }\n    if (message.tickUpper !== 0) {\n      writer.uint32(48).int32(message.tickUpper);\n    }\n    if (message.amount0Desired !== \"\") {\n      writer.uint32(58).string(message.amount0Desired);\n    }\n    if (message.amount1Desired !== \"\") {\n      writer.uint32(66).string(message.amount1Desired);\n    }\n    if (message.amount0Min !== \"\") {\n      writer.uint32(74).string(message.amount0Min);\n    }\n    if (message.amount1Min !== \"\") {\n      writer.uint32(82).string(message.amount1Min);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(90).string(message.recipient);\n    }\n    if (!message.deadline.isZero()) {\n      writer.uint32(96).int64(message.deadline);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreatePosition {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreatePosition();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.denom0 = reader.string();\n          break;\n        case 3:\n          message.denom1 = reader.string();\n          break;\n        case 4:\n          message.fee = reader.int32();\n          break;\n        case 5:\n          message.tickLower = reader.int32();\n          break;\n        case 6:\n          message.tickUpper = reader.int32();\n          break;\n        case 7:\n          message.amount0Desired = reader.string();\n          break;\n        case 8:\n          message.amount1Desired = reader.string();\n          break;\n        case 9:\n          message.amount0Min = reader.string();\n          break;\n        case 10:\n          message.amount1Min = reader.string();\n          break;\n        case 11:\n          message.recipient = reader.string();\n          break;\n        case 12:\n          message.deadline = reader.int64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgCreatePosition {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      denom0: isSet(object.denom0) ? String(object.denom0) : \"\",\n      denom1: isSet(object.denom1) ? String(object.denom1) : \"\",\n      fee: isSet(object.fee) ? Number(object.fee) : 0,\n      tickLower: isSet(object.tickLower) ? Number(object.tickLower) : 0,\n      tickUpper: isSet(object.tickUpper) ? Number(object.tickUpper) : 0,\n      amount0Desired: isSet(object.amount0Desired)\n        ? String(object.amount0Desired)\n        : \"\",\n      amount1Desired: isSet(object.amount1Desired)\n        ? String(object.amount1Desired)\n        : \"\",\n      amount0Min: isSet(object.amount0Min) ? String(object.amount0Min) : \"\",\n      amount1Min: isSet(object.amount1Min) ? String(object.amount1Min) : \"\",\n      recipient: isSet(object.recipient) ? String(object.recipient) : \"\",\n      deadline: isSet(object.deadline)\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO,\n    };\n  },\n\n  toJSON(message: MsgCreatePosition): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.denom0 !== undefined && (obj.denom0 = message.denom0);\n    message.denom1 !== undefined && (obj.denom1 = message.denom1);\n    message.fee !== undefined && (obj.fee = Math.round(message.fee));\n    message.tickLower !== undefined &&\n      (obj.tickLower = Math.round(message.tickLower));\n    message.tickUpper !== undefined &&\n      (obj.tickUpper = Math.round(message.tickUpper));\n    message.amount0Desired !== undefined &&\n      (obj.amount0Desired = message.amount0Desired);\n    message.amount1Desired !== undefined &&\n      (obj.amount1Desired = message.amount1Desired);\n    message.amount0Min !== undefined && (obj.amount0Min = message.amount0Min);\n    message.amount1Min !== undefined && (obj.amount1Min = message.amount1Min);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n    message.deadline !== undefined &&\n      (obj.deadline = (message.deadline || Long.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCreatePosition>, I>>(\n    object: I\n  ): MsgCreatePosition {\n    const message = createBaseMsgCreatePosition();\n    message.creator = object.creator ?? \"\";\n    message.denom0 = object.denom0 ?? \"\";\n    message.denom1 = object.denom1 ?? \"\";\n    message.fee = object.fee ?? 0;\n    message.tickLower = object.tickLower ?? 0;\n    message.tickUpper = object.tickUpper ?? 0;\n    message.amount0Desired = object.amount0Desired ?? \"\";\n    message.amount1Desired = object.amount1Desired ?? \"\";\n    message.amount0Min = object.amount0Min ?? \"\";\n    message.amount1Min = object.amount1Min ?? \"\";\n    message.recipient = object.recipient ?? \"\";\n    message.deadline =\n      object.deadline !== undefined && object.deadline !== null\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgCreatePositionResponse(): MsgCreatePositionResponse {\n  return {};\n}\n\nexport const MsgCreatePositionResponse = {\n  encode(\n    _: MsgCreatePositionResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgCreatePositionResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCreatePositionResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgCreatePositionResponse {\n    return {};\n  },\n\n  toJSON(_: MsgCreatePositionResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCreatePositionResponse>, I>>(\n    _: I\n  ): MsgCreatePositionResponse {\n    const message = createBaseMsgCreatePositionResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgIncreaseLiquidity(): MsgIncreaseLiquidity {\n  return {\n    creator: \"\",\n    tokenId: \"\",\n    amount0Desired: \"\",\n    amount1Desired: \"\",\n    amount0Min: \"\",\n    amount1Min: \"\",\n    deadline: Long.ZERO,\n  };\n}\n\nexport const MsgIncreaseLiquidity = {\n  encode(\n    message: MsgIncreaseLiquidity,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.tokenId !== \"\") {\n      writer.uint32(18).string(message.tokenId);\n    }\n    if (message.amount0Desired !== \"\") {\n      writer.uint32(26).string(message.amount0Desired);\n    }\n    if (message.amount1Desired !== \"\") {\n      writer.uint32(34).string(message.amount1Desired);\n    }\n    if (message.amount0Min !== \"\") {\n      writer.uint32(42).string(message.amount0Min);\n    }\n    if (message.amount1Min !== \"\") {\n      writer.uint32(50).string(message.amount1Min);\n    }\n    if (!message.deadline.isZero()) {\n      writer.uint32(56).int64(message.deadline);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgIncreaseLiquidity {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgIncreaseLiquidity();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.tokenId = reader.string();\n          break;\n        case 3:\n          message.amount0Desired = reader.string();\n          break;\n        case 4:\n          message.amount1Desired = reader.string();\n          break;\n        case 5:\n          message.amount0Min = reader.string();\n          break;\n        case 6:\n          message.amount1Min = reader.string();\n          break;\n        case 7:\n          message.deadline = reader.int64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgIncreaseLiquidity {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      tokenId: isSet(object.tokenId) ? String(object.tokenId) : \"\",\n      amount0Desired: isSet(object.amount0Desired)\n        ? String(object.amount0Desired)\n        : \"\",\n      amount1Desired: isSet(object.amount1Desired)\n        ? String(object.amount1Desired)\n        : \"\",\n      amount0Min: isSet(object.amount0Min) ? String(object.amount0Min) : \"\",\n      amount1Min: isSet(object.amount1Min) ? String(object.amount1Min) : \"\",\n      deadline: isSet(object.deadline)\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO,\n    };\n  },\n\n  toJSON(message: MsgIncreaseLiquidity): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n    message.amount0Desired !== undefined &&\n      (obj.amount0Desired = message.amount0Desired);\n    message.amount1Desired !== undefined &&\n      (obj.amount1Desired = message.amount1Desired);\n    message.amount0Min !== undefined && (obj.amount0Min = message.amount0Min);\n    message.amount1Min !== undefined && (obj.amount1Min = message.amount1Min);\n    message.deadline !== undefined &&\n      (obj.deadline = (message.deadline || Long.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgIncreaseLiquidity>, I>>(\n    object: I\n  ): MsgIncreaseLiquidity {\n    const message = createBaseMsgIncreaseLiquidity();\n    message.creator = object.creator ?? \"\";\n    message.tokenId = object.tokenId ?? \"\";\n    message.amount0Desired = object.amount0Desired ?? \"\";\n    message.amount1Desired = object.amount1Desired ?? \"\";\n    message.amount0Min = object.amount0Min ?? \"\";\n    message.amount1Min = object.amount1Min ?? \"\";\n    message.deadline =\n      object.deadline !== undefined && object.deadline !== null\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgIncreaseLiquidityResponse(): MsgIncreaseLiquidityResponse {\n  return {};\n}\n\nexport const MsgIncreaseLiquidityResponse = {\n  encode(\n    _: MsgIncreaseLiquidityResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgIncreaseLiquidityResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgIncreaseLiquidityResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgIncreaseLiquidityResponse {\n    return {};\n  },\n\n  toJSON(_: MsgIncreaseLiquidityResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgIncreaseLiquidityResponse>, I>>(\n    _: I\n  ): MsgIncreaseLiquidityResponse {\n    const message = createBaseMsgIncreaseLiquidityResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgDecreaseLiquidity(): MsgDecreaseLiquidity {\n  return {\n    creator: \"\",\n    tokenId: \"\",\n    liquidity: \"\",\n    amount0Min: \"\",\n    amount1Min: \"\",\n    deadline: Long.ZERO,\n  };\n}\n\nexport const MsgDecreaseLiquidity = {\n  encode(\n    message: MsgDecreaseLiquidity,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.tokenId !== \"\") {\n      writer.uint32(18).string(message.tokenId);\n    }\n    if (message.liquidity !== \"\") {\n      writer.uint32(26).string(message.liquidity);\n    }\n    if (message.amount0Min !== \"\") {\n      writer.uint32(34).string(message.amount0Min);\n    }\n    if (message.amount1Min !== \"\") {\n      writer.uint32(42).string(message.amount1Min);\n    }\n    if (!message.deadline.isZero()) {\n      writer.uint32(48).int64(message.deadline);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgDecreaseLiquidity {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgDecreaseLiquidity();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.tokenId = reader.string();\n          break;\n        case 3:\n          message.liquidity = reader.string();\n          break;\n        case 4:\n          message.amount0Min = reader.string();\n          break;\n        case 5:\n          message.amount1Min = reader.string();\n          break;\n        case 6:\n          message.deadline = reader.int64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgDecreaseLiquidity {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      tokenId: isSet(object.tokenId) ? String(object.tokenId) : \"\",\n      liquidity: isSet(object.liquidity) ? String(object.liquidity) : \"\",\n      amount0Min: isSet(object.amount0Min) ? String(object.amount0Min) : \"\",\n      amount1Min: isSet(object.amount1Min) ? String(object.amount1Min) : \"\",\n      deadline: isSet(object.deadline)\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO,\n    };\n  },\n\n  toJSON(message: MsgDecreaseLiquidity): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n    message.liquidity !== undefined && (obj.liquidity = message.liquidity);\n    message.amount0Min !== undefined && (obj.amount0Min = message.amount0Min);\n    message.amount1Min !== undefined && (obj.amount1Min = message.amount1Min);\n    message.deadline !== undefined &&\n      (obj.deadline = (message.deadline || Long.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgDecreaseLiquidity>, I>>(\n    object: I\n  ): MsgDecreaseLiquidity {\n    const message = createBaseMsgDecreaseLiquidity();\n    message.creator = object.creator ?? \"\";\n    message.tokenId = object.tokenId ?? \"\";\n    message.liquidity = object.liquidity ?? \"\";\n    message.amount0Min = object.amount0Min ?? \"\";\n    message.amount1Min = object.amount1Min ?? \"\";\n    message.deadline =\n      object.deadline !== undefined && object.deadline !== null\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgDecreaseLiquidityResponse(): MsgDecreaseLiquidityResponse {\n  return {};\n}\n\nexport const MsgDecreaseLiquidityResponse = {\n  encode(\n    _: MsgDecreaseLiquidityResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgDecreaseLiquidityResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgDecreaseLiquidityResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgDecreaseLiquidityResponse {\n    return {};\n  },\n\n  toJSON(_: MsgDecreaseLiquidityResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgDecreaseLiquidityResponse>, I>>(\n    _: I\n  ): MsgDecreaseLiquidityResponse {\n    const message = createBaseMsgDecreaseLiquidityResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgCollect(): MsgCollect {\n  return {\n    creator: \"\",\n    tokenId: \"\",\n    recipient: \"\",\n    amount0Max: \"\",\n    amount1Max: \"\",\n    collectOnly: false,\n  };\n}\n\nexport const MsgCollect = {\n  encode(\n    message: MsgCollect,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.tokenId !== \"\") {\n      writer.uint32(18).string(message.tokenId);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(26).string(message.recipient);\n    }\n    if (message.amount0Max !== \"\") {\n      writer.uint32(34).string(message.amount0Max);\n    }\n    if (message.amount1Max !== \"\") {\n      writer.uint32(42).string(message.amount1Max);\n    }\n    if (message.collectOnly === true) {\n      writer.uint32(48).bool(message.collectOnly);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCollect {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCollect();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.tokenId = reader.string();\n          break;\n        case 3:\n          message.recipient = reader.string();\n          break;\n        case 4:\n          message.amount0Max = reader.string();\n          break;\n        case 5:\n          message.amount1Max = reader.string();\n          break;\n        case 6:\n          message.collectOnly = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgCollect {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      tokenId: isSet(object.tokenId) ? String(object.tokenId) : \"\",\n      recipient: isSet(object.recipient) ? String(object.recipient) : \"\",\n      amount0Max: isSet(object.amount0Max) ? String(object.amount0Max) : \"\",\n      amount1Max: isSet(object.amount1Max) ? String(object.amount1Max) : \"\",\n      collectOnly: isSet(object.collectOnly)\n        ? Boolean(object.collectOnly)\n        : false,\n    };\n  },\n\n  toJSON(message: MsgCollect): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n    message.amount0Max !== undefined && (obj.amount0Max = message.amount0Max);\n    message.amount1Max !== undefined && (obj.amount1Max = message.amount1Max);\n    message.collectOnly !== undefined &&\n      (obj.collectOnly = message.collectOnly);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCollect>, I>>(\n    object: I\n  ): MsgCollect {\n    const message = createBaseMsgCollect();\n    message.creator = object.creator ?? \"\";\n    message.tokenId = object.tokenId ?? \"\";\n    message.recipient = object.recipient ?? \"\";\n    message.amount0Max = object.amount0Max ?? \"\";\n    message.amount1Max = object.amount1Max ?? \"\";\n    message.collectOnly = object.collectOnly ?? false;\n    return message;\n  },\n};\n\nfunction createBaseMsgCollectResponse(): MsgCollectResponse {\n  return {};\n}\n\nexport const MsgCollectResponse = {\n  encode(\n    _: MsgCollectResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCollectResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCollectResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgCollectResponse {\n    return {};\n  },\n\n  toJSON(_: MsgCollectResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCollectResponse>, I>>(\n    _: I\n  ): MsgCollectResponse {\n    const message = createBaseMsgCollectResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgSwapExactIn(): MsgSwapExactIn {\n  return {\n    creator: \"\",\n    recipient: \"\",\n    amountIn: \"\",\n    amountOutMin: \"\",\n    denoms: [],\n    fees: [],\n    deadline: Long.ZERO,\n  };\n}\n\nexport const MsgSwapExactIn = {\n  encode(\n    message: MsgSwapExactIn,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(18).string(message.recipient);\n    }\n    if (message.amountIn !== \"\") {\n      writer.uint32(26).string(message.amountIn);\n    }\n    if (message.amountOutMin !== \"\") {\n      writer.uint32(34).string(message.amountOutMin);\n    }\n    for (const v of message.denoms) {\n      writer.uint32(42).string(v!);\n    }\n    writer.uint32(50).fork();\n    for (const v of message.fees) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (!message.deadline.isZero()) {\n      writer.uint32(56).int64(message.deadline);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSwapExactIn {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSwapExactIn();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.recipient = reader.string();\n          break;\n        case 3:\n          message.amountIn = reader.string();\n          break;\n        case 4:\n          message.amountOutMin = reader.string();\n          break;\n        case 5:\n          message.denoms.push(reader.string());\n          break;\n        case 6:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.fees.push(reader.int32());\n            }\n          } else {\n            message.fees.push(reader.int32());\n          }\n          break;\n        case 7:\n          message.deadline = reader.int64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSwapExactIn {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      recipient: isSet(object.recipient) ? String(object.recipient) : \"\",\n      amountIn: isSet(object.amountIn) ? String(object.amountIn) : \"\",\n      amountOutMin: isSet(object.amountOutMin)\n        ? String(object.amountOutMin)\n        : \"\",\n      denoms: Array.isArray(object?.denoms)\n        ? object.denoms.map((e: any) => String(e))\n        : [],\n      fees: Array.isArray(object?.fees)\n        ? object.fees.map((e: any) => Number(e))\n        : [],\n      deadline: isSet(object.deadline)\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO,\n    };\n  },\n\n  toJSON(message: MsgSwapExactIn): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n    message.amountIn !== undefined && (obj.amountIn = message.amountIn);\n    message.amountOutMin !== undefined &&\n      (obj.amountOutMin = message.amountOutMin);\n    if (message.denoms) {\n      obj.denoms = message.denoms.map((e) => e);\n    } else {\n      obj.denoms = [];\n    }\n    if (message.fees) {\n      obj.fees = message.fees.map((e) => Math.round(e));\n    } else {\n      obj.fees = [];\n    }\n    message.deadline !== undefined &&\n      (obj.deadline = (message.deadline || Long.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgSwapExactIn>, I>>(\n    object: I\n  ): MsgSwapExactIn {\n    const message = createBaseMsgSwapExactIn();\n    message.creator = object.creator ?? \"\";\n    message.recipient = object.recipient ?? \"\";\n    message.amountIn = object.amountIn ?? \"\";\n    message.amountOutMin = object.amountOutMin ?? \"\";\n    message.denoms = object.denoms?.map((e) => e) || [];\n    message.fees = object.fees?.map((e) => e) || [];\n    message.deadline =\n      object.deadline !== undefined && object.deadline !== null\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgSwapExactInResponse(): MsgSwapExactInResponse {\n  return {};\n}\n\nexport const MsgSwapExactInResponse = {\n  encode(\n    _: MsgSwapExactInResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgSwapExactInResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSwapExactInResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgSwapExactInResponse {\n    return {};\n  },\n\n  toJSON(_: MsgSwapExactInResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgSwapExactInResponse>, I>>(\n    _: I\n  ): MsgSwapExactInResponse {\n    const message = createBaseMsgSwapExactInResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgSwapExactOut(): MsgSwapExactOut {\n  return {\n    creator: \"\",\n    recipient: \"\",\n    amountOut: \"\",\n    amountInMax: \"\",\n    denoms: [],\n    fees: [],\n    deadline: Long.ZERO,\n  };\n}\n\nexport const MsgSwapExactOut = {\n  encode(\n    message: MsgSwapExactOut,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(18).string(message.recipient);\n    }\n    if (message.amountOut !== \"\") {\n      writer.uint32(26).string(message.amountOut);\n    }\n    if (message.amountInMax !== \"\") {\n      writer.uint32(34).string(message.amountInMax);\n    }\n    for (const v of message.denoms) {\n      writer.uint32(42).string(v!);\n    }\n    writer.uint32(50).fork();\n    for (const v of message.fees) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (!message.deadline.isZero()) {\n      writer.uint32(56).int64(message.deadline);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSwapExactOut {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSwapExactOut();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.recipient = reader.string();\n          break;\n        case 3:\n          message.amountOut = reader.string();\n          break;\n        case 4:\n          message.amountInMax = reader.string();\n          break;\n        case 5:\n          message.denoms.push(reader.string());\n          break;\n        case 6:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.fees.push(reader.int32());\n            }\n          } else {\n            message.fees.push(reader.int32());\n          }\n          break;\n        case 7:\n          message.deadline = reader.int64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSwapExactOut {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      recipient: isSet(object.recipient) ? String(object.recipient) : \"\",\n      amountOut: isSet(object.amountOut) ? String(object.amountOut) : \"\",\n      amountInMax: isSet(object.amountInMax) ? String(object.amountInMax) : \"\",\n      denoms: Array.isArray(object?.denoms)\n        ? object.denoms.map((e: any) => String(e))\n        : [],\n      fees: Array.isArray(object?.fees)\n        ? object.fees.map((e: any) => Number(e))\n        : [],\n      deadline: isSet(object.deadline)\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO,\n    };\n  },\n\n  toJSON(message: MsgSwapExactOut): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n    message.amountOut !== undefined && (obj.amountOut = message.amountOut);\n    message.amountInMax !== undefined &&\n      (obj.amountInMax = message.amountInMax);\n    if (message.denoms) {\n      obj.denoms = message.denoms.map((e) => e);\n    } else {\n      obj.denoms = [];\n    }\n    if (message.fees) {\n      obj.fees = message.fees.map((e) => Math.round(e));\n    } else {\n      obj.fees = [];\n    }\n    message.deadline !== undefined &&\n      (obj.deadline = (message.deadline || Long.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgSwapExactOut>, I>>(\n    object: I\n  ): MsgSwapExactOut {\n    const message = createBaseMsgSwapExactOut();\n    message.creator = object.creator ?? \"\";\n    message.recipient = object.recipient ?? \"\";\n    message.amountOut = object.amountOut ?? \"\";\n    message.amountInMax = object.amountInMax ?? \"\";\n    message.denoms = object.denoms?.map((e) => e) || [];\n    message.fees = object.fees?.map((e) => e) || [];\n    message.deadline =\n      object.deadline !== undefined && object.deadline !== null\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgSwapExactOutResponse(): MsgSwapExactOutResponse {\n  return {};\n}\n\nexport const MsgSwapExactOutResponse = {\n  encode(\n    _: MsgSwapExactOutResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgSwapExactOutResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSwapExactOutResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgSwapExactOutResponse {\n    return {};\n  },\n\n  toJSON(_: MsgSwapExactOutResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgSwapExactOutResponse>, I>>(\n    _: I\n  ): MsgSwapExactOutResponse {\n    const message = createBaseMsgSwapExactOutResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgSetOperator(): MsgSetOperator {\n  return { creator: \"\", address: \"\", index: 0, operator: \"\" };\n}\n\nexport const MsgSetOperator = {\n  encode(\n    message: MsgSetOperator,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.address !== \"\") {\n      writer.uint32(18).string(message.address);\n    }\n    if (message.index !== 0) {\n      writer.uint32(24).uint32(message.index);\n    }\n    if (message.operator !== \"\") {\n      writer.uint32(34).string(message.operator);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSetOperator {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSetOperator();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.address = reader.string();\n          break;\n        case 3:\n          message.index = reader.uint32();\n          break;\n        case 4:\n          message.operator = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSetOperator {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      address: isSet(object.address) ? String(object.address) : \"\",\n      index: isSet(object.index) ? Number(object.index) : 0,\n      operator: isSet(object.operator) ? String(object.operator) : \"\",\n    };\n  },\n\n  toJSON(message: MsgSetOperator): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.address !== undefined && (obj.address = message.address);\n    message.index !== undefined && (obj.index = Math.round(message.index));\n    message.operator !== undefined && (obj.operator = message.operator);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgSetOperator>, I>>(\n    object: I\n  ): MsgSetOperator {\n    const message = createBaseMsgSetOperator();\n    message.creator = object.creator ?? \"\";\n    message.address = object.address ?? \"\";\n    message.index = object.index ?? 0;\n    message.operator = object.operator ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgSetOperatorResponse(): MsgSetOperatorResponse {\n  return {};\n}\n\nexport const MsgSetOperatorResponse = {\n  encode(\n    _: MsgSetOperatorResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgSetOperatorResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSetOperatorResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgSetOperatorResponse {\n    return {};\n  },\n\n  toJSON(_: MsgSetOperatorResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgSetOperatorResponse>, I>>(\n    _: I\n  ): MsgSetOperatorResponse {\n    const message = createBaseMsgSetOperatorResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgSetReward(): MsgSetReward {\n  return {\n    creator: \"\",\n    address: \"\",\n    index: 0,\n    denom: \"\",\n    rewardPerSecond: \"\",\n    mintable: false,\n    triggerTime: Long.ZERO,\n  };\n}\n\nexport const MsgSetReward = {\n  encode(\n    message: MsgSetReward,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.address !== \"\") {\n      writer.uint32(18).string(message.address);\n    }\n    if (message.index !== 0) {\n      writer.uint32(24).uint32(message.index);\n    }\n    if (message.denom !== \"\") {\n      writer.uint32(34).string(message.denom);\n    }\n    if (message.rewardPerSecond !== \"\") {\n      writer.uint32(42).string(message.rewardPerSecond);\n    }\n    if (message.mintable === true) {\n      writer.uint32(48).bool(message.mintable);\n    }\n    if (!message.triggerTime.isZero()) {\n      writer.uint32(56).int64(message.triggerTime);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgSetReward {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSetReward();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.address = reader.string();\n          break;\n        case 3:\n          message.index = reader.uint32();\n          break;\n        case 4:\n          message.denom = reader.string();\n          break;\n        case 5:\n          message.rewardPerSecond = reader.string();\n          break;\n        case 6:\n          message.mintable = reader.bool();\n          break;\n        case 7:\n          message.triggerTime = reader.int64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgSetReward {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      address: isSet(object.address) ? String(object.address) : \"\",\n      index: isSet(object.index) ? Number(object.index) : 0,\n      denom: isSet(object.denom) ? String(object.denom) : \"\",\n      rewardPerSecond: isSet(object.rewardPerSecond)\n        ? String(object.rewardPerSecond)\n        : \"\",\n      mintable: isSet(object.mintable) ? Boolean(object.mintable) : false,\n      triggerTime: isSet(object.triggerTime)\n        ? Long.fromValue(object.triggerTime)\n        : Long.ZERO,\n    };\n  },\n\n  toJSON(message: MsgSetReward): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.address !== undefined && (obj.address = message.address);\n    message.index !== undefined && (obj.index = Math.round(message.index));\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.rewardPerSecond !== undefined &&\n      (obj.rewardPerSecond = message.rewardPerSecond);\n    message.mintable !== undefined && (obj.mintable = message.mintable);\n    message.triggerTime !== undefined &&\n      (obj.triggerTime = (message.triggerTime || Long.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgSetReward>, I>>(\n    object: I\n  ): MsgSetReward {\n    const message = createBaseMsgSetReward();\n    message.creator = object.creator ?? \"\";\n    message.address = object.address ?? \"\";\n    message.index = object.index ?? 0;\n    message.denom = object.denom ?? \"\";\n    message.rewardPerSecond = object.rewardPerSecond ?? \"\";\n    message.mintable = object.mintable ?? false;\n    message.triggerTime =\n      object.triggerTime !== undefined && object.triggerTime !== null\n        ? Long.fromValue(object.triggerTime)\n        : Long.ZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgSetRewardResponse(): MsgSetRewardResponse {\n  return {};\n}\n\nexport const MsgSetRewardResponse = {\n  encode(\n    _: MsgSetRewardResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgSetRewardResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgSetRewardResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgSetRewardResponse {\n    return {};\n  },\n\n  toJSON(_: MsgSetRewardResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgSetRewardResponse>, I>>(\n    _: I\n  ): MsgSetRewardResponse {\n    const message = createBaseMsgSetRewardResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgCollectReward(): MsgCollectReward {\n  return { creator: \"\", tokenId: \"\", recipient: \"\", collectOnly: false };\n}\n\nexport const MsgCollectReward = {\n  encode(\n    message: MsgCollectReward,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.tokenId !== \"\") {\n      writer.uint32(18).string(message.tokenId);\n    }\n    if (message.recipient !== \"\") {\n      writer.uint32(26).string(message.recipient);\n    }\n    if (message.collectOnly === true) {\n      writer.uint32(32).bool(message.collectOnly);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgCollectReward {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCollectReward();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.tokenId = reader.string();\n          break;\n        case 3:\n          message.recipient = reader.string();\n          break;\n        case 4:\n          message.collectOnly = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgCollectReward {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      tokenId: isSet(object.tokenId) ? String(object.tokenId) : \"\",\n      recipient: isSet(object.recipient) ? String(object.recipient) : \"\",\n      collectOnly: isSet(object.collectOnly)\n        ? Boolean(object.collectOnly)\n        : false,\n    };\n  },\n\n  toJSON(message: MsgCollectReward): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n    message.recipient !== undefined && (obj.recipient = message.recipient);\n    message.collectOnly !== undefined &&\n      (obj.collectOnly = message.collectOnly);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCollectReward>, I>>(\n    object: I\n  ): MsgCollectReward {\n    const message = createBaseMsgCollectReward();\n    message.creator = object.creator ?? \"\";\n    message.tokenId = object.tokenId ?? \"\";\n    message.recipient = object.recipient ?? \"\";\n    message.collectOnly = object.collectOnly ?? false;\n    return message;\n  },\n};\n\nfunction createBaseMsgCollectRewardResponse(): MsgCollectRewardResponse {\n  return {};\n}\n\nexport const MsgCollectRewardResponse = {\n  encode(\n    _: MsgCollectRewardResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgCollectRewardResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCollectRewardResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgCollectRewardResponse {\n    return {};\n  },\n\n  toJSON(_: MsgCollectRewardResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCollectRewardResponse>, I>>(\n    _: I\n  ): MsgCollectRewardResponse {\n    const message = createBaseMsgCollectRewardResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgCollectFeeProtocol(): MsgCollectFeeProtocol {\n  return { creator: \"\", address: \"\" };\n}\n\nexport const MsgCollectFeeProtocol = {\n  encode(\n    message: MsgCollectFeeProtocol,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.address !== \"\") {\n      writer.uint32(18).string(message.address);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgCollectFeeProtocol {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCollectFeeProtocol();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.address = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgCollectFeeProtocol {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      address: isSet(object.address) ? String(object.address) : \"\",\n    };\n  },\n\n  toJSON(message: MsgCollectFeeProtocol): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.address !== undefined && (obj.address = message.address);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCollectFeeProtocol>, I>>(\n    object: I\n  ): MsgCollectFeeProtocol {\n    const message = createBaseMsgCollectFeeProtocol();\n    message.creator = object.creator ?? \"\";\n    message.address = object.address ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgCollectFeeProtocolResponse(): MsgCollectFeeProtocolResponse {\n  return {};\n}\n\nexport const MsgCollectFeeProtocolResponse = {\n  encode(\n    _: MsgCollectFeeProtocolResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgCollectFeeProtocolResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgCollectFeeProtocolResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgCollectFeeProtocolResponse {\n    return {};\n  },\n\n  toJSON(_: MsgCollectFeeProtocolResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgCollectFeeProtocolResponse>, I>>(\n    _: I\n  ): MsgCollectFeeProtocolResponse {\n    const message = createBaseMsgCollectFeeProtocolResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgGovBurn(): MsgGovBurn {\n  return { creator: \"\", amount: \"\" };\n}\n\nexport const MsgGovBurn = {\n  encode(\n    message: MsgGovBurn,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(18).string(message.amount);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgGovBurn {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgGovBurn();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.amount = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgGovBurn {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      amount: isSet(object.amount) ? String(object.amount) : \"\",\n    };\n  },\n\n  toJSON(message: MsgGovBurn): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.amount !== undefined && (obj.amount = message.amount);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgGovBurn>, I>>(\n    object: I\n  ): MsgGovBurn {\n    const message = createBaseMsgGovBurn();\n    message.creator = object.creator ?? \"\";\n    message.amount = object.amount ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseMsgGovBurnResponse(): MsgGovBurnResponse {\n  return {};\n}\n\nexport const MsgGovBurnResponse = {\n  encode(\n    _: MsgGovBurnResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgGovBurnResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgGovBurnResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgGovBurnResponse {\n    return {};\n  },\n\n  toJSON(_: MsgGovBurnResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgGovBurnResponse>, I>>(\n    _: I\n  ): MsgGovBurnResponse {\n    const message = createBaseMsgGovBurnResponse();\n    return message;\n  },\n};\n\nfunction createBaseMsgGovSwapExactIn(): MsgGovSwapExactIn {\n  return {\n    creator: \"\",\n    amountIn: \"\",\n    amountOutMin: \"\",\n    denoms: [],\n    fees: [],\n    deadline: Long.ZERO,\n  };\n}\n\nexport const MsgGovSwapExactIn = {\n  encode(\n    message: MsgGovSwapExactIn,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.creator !== \"\") {\n      writer.uint32(10).string(message.creator);\n    }\n    if (message.amountIn !== \"\") {\n      writer.uint32(18).string(message.amountIn);\n    }\n    if (message.amountOutMin !== \"\") {\n      writer.uint32(26).string(message.amountOutMin);\n    }\n    for (const v of message.denoms) {\n      writer.uint32(34).string(v!);\n    }\n    writer.uint32(42).fork();\n    for (const v of message.fees) {\n      writer.int32(v);\n    }\n    writer.ldelim();\n    if (!message.deadline.isZero()) {\n      writer.uint32(48).int64(message.deadline);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MsgGovSwapExactIn {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgGovSwapExactIn();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.creator = reader.string();\n          break;\n        case 2:\n          message.amountIn = reader.string();\n          break;\n        case 3:\n          message.amountOutMin = reader.string();\n          break;\n        case 4:\n          message.denoms.push(reader.string());\n          break;\n        case 5:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.fees.push(reader.int32());\n            }\n          } else {\n            message.fees.push(reader.int32());\n          }\n          break;\n        case 6:\n          message.deadline = reader.int64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MsgGovSwapExactIn {\n    return {\n      creator: isSet(object.creator) ? String(object.creator) : \"\",\n      amountIn: isSet(object.amountIn) ? String(object.amountIn) : \"\",\n      amountOutMin: isSet(object.amountOutMin)\n        ? String(object.amountOutMin)\n        : \"\",\n      denoms: Array.isArray(object?.denoms)\n        ? object.denoms.map((e: any) => String(e))\n        : [],\n      fees: Array.isArray(object?.fees)\n        ? object.fees.map((e: any) => Number(e))\n        : [],\n      deadline: isSet(object.deadline)\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO,\n    };\n  },\n\n  toJSON(message: MsgGovSwapExactIn): unknown {\n    const obj: any = {};\n    message.creator !== undefined && (obj.creator = message.creator);\n    message.amountIn !== undefined && (obj.amountIn = message.amountIn);\n    message.amountOutMin !== undefined &&\n      (obj.amountOutMin = message.amountOutMin);\n    if (message.denoms) {\n      obj.denoms = message.denoms.map((e) => e);\n    } else {\n      obj.denoms = [];\n    }\n    if (message.fees) {\n      obj.fees = message.fees.map((e) => Math.round(e));\n    } else {\n      obj.fees = [];\n    }\n    message.deadline !== undefined &&\n      (obj.deadline = (message.deadline || Long.ZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgGovSwapExactIn>, I>>(\n    object: I\n  ): MsgGovSwapExactIn {\n    const message = createBaseMsgGovSwapExactIn();\n    message.creator = object.creator ?? \"\";\n    message.amountIn = object.amountIn ?? \"\";\n    message.amountOutMin = object.amountOutMin ?? \"\";\n    message.denoms = object.denoms?.map((e) => e) || [];\n    message.fees = object.fees?.map((e) => e) || [];\n    message.deadline =\n      object.deadline !== undefined && object.deadline !== null\n        ? Long.fromValue(object.deadline)\n        : Long.ZERO;\n    return message;\n  },\n};\n\nfunction createBaseMsgGovSwapExactInResponse(): MsgGovSwapExactInResponse {\n  return {};\n}\n\nexport const MsgGovSwapExactInResponse = {\n  encode(\n    _: MsgGovSwapExactInResponse,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): MsgGovSwapExactInResponse {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMsgGovSwapExactInResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(_: any): MsgGovSwapExactInResponse {\n    return {};\n  },\n\n  toJSON(_: MsgGovSwapExactInResponse): unknown {\n    const obj: any = {};\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MsgGovSwapExactInResponse>, I>>(\n    _: I\n  ): MsgGovSwapExactInResponse {\n    const message = createBaseMsgGovSwapExactInResponse();\n    return message;\n  },\n};\n\n/** Msg defines the Msg service. */\nexport interface Msg {\n  CreatePool(\n    request: DeepPartial<MsgCreatePool>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCreatePoolResponse>;\n  CreatePosition(\n    request: DeepPartial<MsgCreatePosition>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCreatePositionResponse>;\n  IncreaseLiquidity(\n    request: DeepPartial<MsgIncreaseLiquidity>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgIncreaseLiquidityResponse>;\n  DecreaseLiquidity(\n    request: DeepPartial<MsgDecreaseLiquidity>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgDecreaseLiquidityResponse>;\n  Collect(\n    request: DeepPartial<MsgCollect>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCollectResponse>;\n  SwapExactIn(\n    request: DeepPartial<MsgSwapExactIn>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgSwapExactInResponse>;\n  SwapExactOut(\n    request: DeepPartial<MsgSwapExactOut>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgSwapExactOutResponse>;\n  SetOperator(\n    request: DeepPartial<MsgSetOperator>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgSetOperatorResponse>;\n  SetReward(\n    request: DeepPartial<MsgSetReward>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgSetRewardResponse>;\n  CollectReward(\n    request: DeepPartial<MsgCollectReward>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCollectRewardResponse>;\n  CollectFeeProtocol(\n    request: DeepPartial<MsgCollectFeeProtocol>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCollectFeeProtocolResponse>;\n  GovBurn(\n    request: DeepPartial<MsgGovBurn>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgGovBurnResponse>;\n  /** this line is used by starport scaffolding # proto/tx/rpc */\n  GovSwapExactIn(\n    request: DeepPartial<MsgGovSwapExactIn>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgGovSwapExactInResponse>;\n}\n\nexport class MsgClientImpl implements Msg {\n  private readonly rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n    this.CreatePool = this.CreatePool.bind(this);\n    this.CreatePosition = this.CreatePosition.bind(this);\n    this.IncreaseLiquidity = this.IncreaseLiquidity.bind(this);\n    this.DecreaseLiquidity = this.DecreaseLiquidity.bind(this);\n    this.Collect = this.Collect.bind(this);\n    this.SwapExactIn = this.SwapExactIn.bind(this);\n    this.SwapExactOut = this.SwapExactOut.bind(this);\n    this.SetOperator = this.SetOperator.bind(this);\n    this.SetReward = this.SetReward.bind(this);\n    this.CollectReward = this.CollectReward.bind(this);\n    this.CollectFeeProtocol = this.CollectFeeProtocol.bind(this);\n    this.GovBurn = this.GovBurn.bind(this);\n    this.GovSwapExactIn = this.GovSwapExactIn.bind(this);\n  }\n\n  CreatePool(\n    request: DeepPartial<MsgCreatePool>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCreatePoolResponse> {\n    return this.rpc.unary(\n      MsgCreatePoolDesc,\n      MsgCreatePool.fromPartial(request),\n      metadata\n    );\n  }\n\n  CreatePosition(\n    request: DeepPartial<MsgCreatePosition>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCreatePositionResponse> {\n    return this.rpc.unary(\n      MsgCreatePositionDesc,\n      MsgCreatePosition.fromPartial(request),\n      metadata\n    );\n  }\n\n  IncreaseLiquidity(\n    request: DeepPartial<MsgIncreaseLiquidity>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgIncreaseLiquidityResponse> {\n    return this.rpc.unary(\n      MsgIncreaseLiquidityDesc,\n      MsgIncreaseLiquidity.fromPartial(request),\n      metadata\n    );\n  }\n\n  DecreaseLiquidity(\n    request: DeepPartial<MsgDecreaseLiquidity>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgDecreaseLiquidityResponse> {\n    return this.rpc.unary(\n      MsgDecreaseLiquidityDesc,\n      MsgDecreaseLiquidity.fromPartial(request),\n      metadata\n    );\n  }\n\n  Collect(\n    request: DeepPartial<MsgCollect>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCollectResponse> {\n    return this.rpc.unary(\n      MsgCollectDesc,\n      MsgCollect.fromPartial(request),\n      metadata\n    );\n  }\n\n  SwapExactIn(\n    request: DeepPartial<MsgSwapExactIn>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgSwapExactInResponse> {\n    return this.rpc.unary(\n      MsgSwapExactInDesc,\n      MsgSwapExactIn.fromPartial(request),\n      metadata\n    );\n  }\n\n  SwapExactOut(\n    request: DeepPartial<MsgSwapExactOut>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgSwapExactOutResponse> {\n    return this.rpc.unary(\n      MsgSwapExactOutDesc,\n      MsgSwapExactOut.fromPartial(request),\n      metadata\n    );\n  }\n\n  SetOperator(\n    request: DeepPartial<MsgSetOperator>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgSetOperatorResponse> {\n    return this.rpc.unary(\n      MsgSetOperatorDesc,\n      MsgSetOperator.fromPartial(request),\n      metadata\n    );\n  }\n\n  SetReward(\n    request: DeepPartial<MsgSetReward>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgSetRewardResponse> {\n    return this.rpc.unary(\n      MsgSetRewardDesc,\n      MsgSetReward.fromPartial(request),\n      metadata\n    );\n  }\n\n  CollectReward(\n    request: DeepPartial<MsgCollectReward>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCollectRewardResponse> {\n    return this.rpc.unary(\n      MsgCollectRewardDesc,\n      MsgCollectReward.fromPartial(request),\n      metadata\n    );\n  }\n\n  CollectFeeProtocol(\n    request: DeepPartial<MsgCollectFeeProtocol>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgCollectFeeProtocolResponse> {\n    return this.rpc.unary(\n      MsgCollectFeeProtocolDesc,\n      MsgCollectFeeProtocol.fromPartial(request),\n      metadata\n    );\n  }\n\n  GovBurn(\n    request: DeepPartial<MsgGovBurn>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgGovBurnResponse> {\n    return this.rpc.unary(\n      MsgGovBurnDesc,\n      MsgGovBurn.fromPartial(request),\n      metadata\n    );\n  }\n\n  GovSwapExactIn(\n    request: DeepPartial<MsgGovSwapExactIn>,\n    metadata?: grpc.Metadata\n  ): Promise<MsgGovSwapExactInResponse> {\n    return this.rpc.unary(\n      MsgGovSwapExactInDesc,\n      MsgGovSwapExactIn.fromPartial(request),\n      metadata\n    );\n  }\n}\n\nexport const MsgDesc = {\n  serviceName: \"sophonlabs.sophon.swap.Msg\",\n};\n\nexport const MsgCreatePoolDesc: UnaryMethodDefinitionish = {\n  methodName: \"CreatePool\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgCreatePool.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgCreatePoolResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgCreatePositionDesc: UnaryMethodDefinitionish = {\n  methodName: \"CreatePosition\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgCreatePosition.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgCreatePositionResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgIncreaseLiquidityDesc: UnaryMethodDefinitionish = {\n  methodName: \"IncreaseLiquidity\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgIncreaseLiquidity.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgIncreaseLiquidityResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgDecreaseLiquidityDesc: UnaryMethodDefinitionish = {\n  methodName: \"DecreaseLiquidity\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgDecreaseLiquidity.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgDecreaseLiquidityResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgCollectDesc: UnaryMethodDefinitionish = {\n  methodName: \"Collect\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgCollect.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgCollectResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgSwapExactInDesc: UnaryMethodDefinitionish = {\n  methodName: \"SwapExactIn\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgSwapExactIn.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgSwapExactInResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgSwapExactOutDesc: UnaryMethodDefinitionish = {\n  methodName: \"SwapExactOut\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgSwapExactOut.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgSwapExactOutResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgSetOperatorDesc: UnaryMethodDefinitionish = {\n  methodName: \"SetOperator\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgSetOperator.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgSetOperatorResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgSetRewardDesc: UnaryMethodDefinitionish = {\n  methodName: \"SetReward\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgSetReward.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgSetRewardResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgCollectRewardDesc: UnaryMethodDefinitionish = {\n  methodName: \"CollectReward\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgCollectReward.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgCollectRewardResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgCollectFeeProtocolDesc: UnaryMethodDefinitionish = {\n  methodName: \"CollectFeeProtocol\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgCollectFeeProtocol.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgCollectFeeProtocolResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgGovBurnDesc: UnaryMethodDefinitionish = {\n  methodName: \"GovBurn\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgGovBurn.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgGovBurnResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\nexport const MsgGovSwapExactInDesc: UnaryMethodDefinitionish = {\n  methodName: \"GovSwapExactIn\",\n  service: MsgDesc,\n  requestStream: false,\n  responseStream: false,\n  requestType: {\n    serializeBinary() {\n      return MsgGovSwapExactIn.encode(this).finish();\n    },\n  } as any,\n  responseType: {\n    deserializeBinary(data: Uint8Array) {\n      return {\n        ...MsgGovSwapExactInResponse.decode(data),\n        toObject() {\n          return this;\n        },\n      };\n    },\n  } as any,\n};\n\ninterface UnaryMethodDefinitionishR\n  extends grpc.UnaryMethodDefinition<any, any> {\n  requestStream: any;\n  responseStream: any;\n}\n\ntype UnaryMethodDefinitionish = UnaryMethodDefinitionishR;\n\ninterface Rpc {\n  unary<T extends UnaryMethodDefinitionish>(\n    methodDesc: T,\n    request: any,\n    metadata: grpc.Metadata | undefined\n  ): Promise<any>;\n}\n\nexport class GrpcWebImpl {\n  private host: string;\n  private options: {\n    transport?: grpc.TransportFactory;\n\n    debug?: boolean;\n    metadata?: grpc.Metadata;\n  };\n\n  constructor(\n    host: string,\n    options: {\n      transport?: grpc.TransportFactory;\n\n      debug?: boolean;\n      metadata?: grpc.Metadata;\n    }\n  ) {\n    this.host = host;\n    this.options = options;\n  }\n\n  unary<T extends UnaryMethodDefinitionish>(\n    methodDesc: T,\n    _request: any,\n    metadata: grpc.Metadata | undefined\n  ): Promise<any> {\n    const request = { ..._request, ...methodDesc.requestType };\n    const maybeCombinedMetadata =\n      metadata && this.options.metadata\n        ? new BrowserHeaders({\n            ...this.options?.metadata.headersMap,\n            ...metadata?.headersMap,\n          })\n        : metadata || this.options.metadata;\n    return new Promise((resolve, reject) => {\n      grpc.unary(methodDesc, {\n        request,\n        host: this.host,\n        metadata: maybeCombinedMetadata,\n        transport: this.options.transport,\n        debug: this.options.debug,\n        onEnd: function (response) {\n          if (response.status === grpc.Code.OK) {\n            resolve(response.message);\n          } else {\n            const err = new Error(response.statusMessage) as any;\n            err.code = response.status;\n            err.metadata = response.trailers;\n            reject(err);\n          }\n        },\n      });\n    });\n  }\n}\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Long\n  ? string | number | Long\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","import {\n  MsgCollect as MsgCollect_pb,\n  MsgCollectReward as MsgCollectReward_pb,\n  MsgCreatePool as MsgCreatePool_pb,\n  MsgCreatePosition as MsgCreatePosition_pb,\n  MsgDecreaseLiquidity as MsgDecreaseLiquidity_pb,\n  MsgIncreaseLiquidity as MsgIncreaseLiquidity_pb,\n  MsgSwapExactIn as MsgSwapExactIn_pb,\n  MsgSwapExactOut as MsgSwapExactOut_pb,\n  protobufPackage,\n} from \"../proto/swap/tx\";\nimport { BaseMsg } from \"./BaseMsg\";\nimport { EncodeObject } from \"@cosmjs/proto-signing\";\n\nexport class MsgCollectReward extends BaseMsg {\n  public protoMsg: MsgCollectReward_pb;\n  constructor(msg: MsgCollectReward_pb) {\n    super();\n    this.protoMsg = msg;\n  }\n  generateMessage(): EncodeObject {\n    return {\n      typeUrl: MsgCreatePool.typeUrl,\n      value: MsgCollectReward_pb.fromPartial(this.protoMsg),\n    };\n  }\n}\n\nexport namespace MsgCollectReward {\n  export const typeUrl: string = `/${protobufPackage}.MsgCollectReward`;\n  export const Proto = MsgCollectReward_pb;\n  export interface Proto extends MsgCollectReward_pb {}\n}\n\nexport class MsgSwapExactOut extends BaseMsg {\n  public protoMsg: MsgSwapExactOut_pb;\n  constructor(msg: MsgSwapExactOut_pb) {\n    super();\n    this.protoMsg = msg;\n  }\n  generateMessage(): EncodeObject {\n    return {\n      typeUrl: MsgSwapExactOut.typeUrl,\n      value: MsgSwapExactOut_pb.fromPartial(this.protoMsg),\n    };\n  }\n}\n\nexport namespace MsgSwapExactOut {\n  export const typeUrl: string = `/${protobufPackage}.MsgSwapExactOut`;\n  export const Proto = MsgSwapExactOut_pb;\n  export interface Proto extends MsgSwapExactOut_pb {}\n}\n\nexport class MsgSwapExactIn extends BaseMsg {\n  public protoMsg: MsgSwapExactIn_pb;\n  constructor(msg: MsgSwapExactIn_pb) {\n    super();\n    this.protoMsg = msg;\n  }\n  generateMessage(): EncodeObject {\n    return {\n      typeUrl: MsgCreatePool.typeUrl,\n      value: MsgSwapExactIn_pb.fromPartial(this.protoMsg),\n    };\n  }\n}\n\nexport namespace MsgSwapExactIn {\n  export const typeUrl: string = `/${protobufPackage}.MsgSwapExactIn`;\n  export const Proto = MsgSwapExactIn_pb;\n  export interface Proto extends MsgSwapExactIn_pb {}\n}\n\nexport class MsgCreatePool extends BaseMsg {\n  public protoMsg: MsgCreatePool_pb;\n  constructor(msg: MsgCreatePool_pb) {\n    super();\n    this.protoMsg = msg;\n  }\n  generateMessage(): EncodeObject {\n    return {\n      typeUrl: MsgCreatePool.typeUrl,\n      value: MsgCreatePool_pb.fromPartial(this.protoMsg),\n    };\n  }\n}\n\nexport namespace MsgCreatePool {\n  export const typeUrl: string = `/${protobufPackage}.MsgCreatePool`;\n  export const Proto = MsgCreatePool_pb;\n  export interface Proto extends MsgCreatePool_pb {}\n}\n\nexport class MsgCollect extends BaseMsg {\n  public protoMsg: MsgCollect_pb;\n  constructor(msg: MsgCollect_pb) {\n    super();\n    this.protoMsg = msg;\n  }\n  generateMessage(): EncodeObject {\n    return {\n      typeUrl: MsgCollect.typeUrl,\n      value: MsgCollect_pb.fromPartial(this.protoMsg),\n    };\n  }\n}\n\nexport namespace MsgCollect {\n  export const typeUrl: string = `/${protobufPackage}.MsgCollect`;\n  export const Proto = MsgCollect_pb;\n  export interface Proto extends MsgCollect_pb {}\n}\n\nexport class MsgCreatePosition extends BaseMsg {\n  public protoMsg: MsgCreatePosition_pb;\n  constructor(msg: MsgCreatePosition_pb) {\n    super();\n    this.protoMsg = msg;\n  }\n  generateMessage(): EncodeObject {\n    return {\n      typeUrl: MsgCreatePosition.typeUrl,\n      value: MsgCreatePosition_pb.fromPartial(this.protoMsg),\n    };\n  }\n}\n\nexport namespace MsgCreatePosition {\n  export const typeUrl: string = `/${protobufPackage}.MsgCreatePosition`;\n  export const Proto = MsgCreatePosition_pb;\n  export interface Proto extends MsgCreatePosition_pb {}\n}\n\nexport class MsgDecreaseLiquidity extends BaseMsg {\n  public protoMsg: MsgDecreaseLiquidity_pb;\n  constructor(msg: MsgDecreaseLiquidity_pb) {\n    super();\n    this.protoMsg = msg;\n  }\n  generateMessage(): EncodeObject {\n    return {\n      typeUrl: MsgDecreaseLiquidity.typeUrl,\n      value: MsgDecreaseLiquidity_pb.fromPartial(this.protoMsg),\n    };\n  }\n}\n\nexport namespace MsgDecreaseLiquidity {\n  export const typeUrl: string = `/${protobufPackage}.MsgDecreaseLiquidity`;\n  export const Proto = MsgDecreaseLiquidity_pb;\n  export interface Proto extends MsgDecreaseLiquidity_pb {}\n}\n\nexport class MsgIncreaseLiquidity extends BaseMsg {\n  public protoMsg: MsgIncreaseLiquidity_pb;\n  constructor(msg: MsgIncreaseLiquidity_pb) {\n    super();\n    this.protoMsg = msg;\n  }\n  generateMessage(): EncodeObject {\n    return {\n      typeUrl: MsgIncreaseLiquidity.typeUrl,\n      value: MsgIncreaseLiquidity_pb.fromPartial(this.protoMsg),\n    };\n  }\n}\n\nexport namespace MsgIncreaseLiquidity {\n  export const typeUrl: string = `/${protobufPackage}.MsgIncreaseLiquidity`;\n  export const Proto = MsgIncreaseLiquidity_pb;\n  export interface Proto extends MsgIncreaseLiquidity_pb {}\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"cosmos.crypto.secp256k1\";\n\n/**\n * PubKey defines a secp256k1 public key\n * Key is the compressed form of the pubkey. The first byte depends is a 0x02\n * byte if the y-coordinate is the lexicographically largest of the two\n * associated with the x-coordinate. Otherwise the first byte is a 0x03. This\n * prefix is followed with the x-coordinate.\n */\nexport interface PubKey {\n  key: Uint8Array;\n}\n\n/** PrivKey defines a secp256k1 private key. */\nexport interface PrivKey {\n  key: Uint8Array;\n}\n\nfunction createBasePubKey(): PubKey {\n  return { key: new Uint8Array() };\n}\n\nexport const PubKey = {\n  encode(\n    message: PubKey,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PubKey {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePubKey();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PubKey {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: PubKey): unknown {\n    const obj: any = {};\n    message.key !== undefined &&\n      (obj.key = base64FromBytes(\n        message.key !== undefined ? message.key : new Uint8Array()\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PubKey>, I>>(object: I): PubKey {\n    const message = createBasePubKey();\n    message.key = object.key ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBasePrivKey(): PrivKey {\n  return { key: new Uint8Array() };\n}\n\nexport const PrivKey = {\n  encode(\n    message: PrivKey,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PrivKey {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePrivKey();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PrivKey {\n    return {\n      key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: PrivKey): unknown {\n    const obj: any = {};\n    message.key !== undefined &&\n      (obj.key = base64FromBytes(\n        message.key !== undefined ? message.key : new Uint8Array()\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<PrivKey>, I>>(object: I): PrivKey {\n    const message = createBasePrivKey();\n    message.key = object.key ?? new Uint8Array();\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob ||\n  ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa ||\n  ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  arr.forEach((byte) => {\n    bin.push(String.fromCharCode(byte));\n  });\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Long\n  ? string | number | Long\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"google.protobuf\";\n\n/**\n * `Any` contains an arbitrary serialized protocol buffer message along with a\n * URL that describes the type of the serialized message.\n *\n * Protobuf library provides support to pack/unpack Any values in the form\n * of utility functions or additional generated methods of the Any type.\n *\n * Example 1: Pack and unpack a message in C++.\n *\n *     Foo foo = ...;\n *     Any any;\n *     any.PackFrom(foo);\n *     ...\n *     if (any.UnpackTo(&foo)) {\n *       ...\n *     }\n *\n * Example 2: Pack and unpack a message in Java.\n *\n *     Foo foo = ...;\n *     Any any = Any.pack(foo);\n *     ...\n *     if (any.is(Foo.class)) {\n *       foo = any.unpack(Foo.class);\n *     }\n *\n *  Example 3: Pack and unpack a message in Python.\n *\n *     foo = Foo(...)\n *     any = Any()\n *     any.Pack(foo)\n *     ...\n *     if any.Is(Foo.DESCRIPTOR):\n *       any.Unpack(foo)\n *       ...\n *\n *  Example 4: Pack and unpack a message in Go\n *\n *      foo := &pb.Foo{...}\n *      any, err := ptypes.MarshalAny(foo)\n *      ...\n *      foo := &pb.Foo{}\n *      if err := ptypes.UnmarshalAny(any, foo); err != nil {\n *        ...\n *      }\n *\n * The pack methods provided by protobuf library will by default use\n * 'type.googleapis.com/full.type.name' as the type URL and the unpack\n * methods only use the fully qualified type name after the last '/'\n * in the type URL, for example \"foo.bar.com/x/y.z\" will yield type\n * name \"y.z\".\n *\n *\n * JSON\n * ====\n * The JSON representation of an `Any` value uses the regular\n * representation of the deserialized, embedded message, with an\n * additional field `@type` which contains the type URL. Example:\n *\n *     package google.profile;\n *     message Person {\n *       string first_name = 1;\n *       string last_name = 2;\n *     }\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.profile.Person\",\n *       \"firstName\": <string>,\n *       \"lastName\": <string>\n *     }\n *\n * If the embedded message type is well-known and has a custom JSON\n * representation, that representation will be embedded adding a field\n * `value` which holds the custom JSON in addition to the `@type`\n * field. Example (for message [google.protobuf.Duration][]):\n *\n *     {\n *       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n *       \"value\": \"1.212s\"\n *     }\n */\nexport interface Any {\n  /**\n   * A URL/resource name that uniquely identifies the type of the serialized\n   * protocol buffer message. This string must contain at least\n   * one \"/\" character. The last segment of the URL's path must represent\n   * the fully qualified name of the type (as in\n   * `path/google.protobuf.Duration`). The name should be in a canonical form\n   * (e.g., leading \".\" is not accepted).\n   *\n   * In practice, teams usually precompile into the binary all types that they\n   * expect it to use in the context of Any. However, for URLs which use the\n   * scheme `http`, `https`, or no scheme, one can optionally set up a type\n   * server that maps type URLs to message definitions as follows:\n   *\n   * * If no scheme is provided, `https` is assumed.\n   * * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   *   value in binary format, or produce an error.\n   * * Applications are allowed to cache lookup results based on the\n   *   URL, or have them precompiled into a binary to avoid any\n   *   lookup. Therefore, binary compatibility needs to be preserved\n   *   on changes to types. (Use versioned type names to manage\n   *   breaking changes.)\n   *\n   * Note: this functionality is not currently available in the official\n   * protobuf release, and it is not used for type URLs beginning with\n   * type.googleapis.com.\n   *\n   * Schemes other than `http`, `https` (or the empty scheme) might be\n   * used with implementation specific semantics.\n   */\n  typeUrl: string;\n  /** Must be a valid serialized protocol buffer of the above specified type. */\n  value: Uint8Array;\n}\n\nfunction createBaseAny(): Any {\n  return { typeUrl: \"\", value: new Uint8Array() };\n}\n\nexport const Any = {\n  encode(message: Any, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.typeUrl !== \"\") {\n      writer.uint32(10).string(message.typeUrl);\n    }\n    if (message.value.length !== 0) {\n      writer.uint32(18).bytes(message.value);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Any {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAny();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.typeUrl = reader.string();\n          break;\n        case 2:\n          message.value = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Any {\n    return {\n      typeUrl: isSet(object.typeUrl) ? String(object.typeUrl) : \"\",\n      value: isSet(object.value)\n        ? bytesFromBase64(object.value)\n        : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: Any): unknown {\n    const obj: any = {};\n    message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n    message.value !== undefined &&\n      (obj.value = base64FromBytes(\n        message.value !== undefined ? message.value : new Uint8Array()\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Any>, I>>(object: I): Any {\n    const message = createBaseAny();\n    message.typeUrl = object.typeUrl ?? \"\";\n    message.value = object.value ?? new Uint8Array();\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob ||\n  ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa ||\n  ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  arr.forEach((byte) => {\n    bin.push(String.fromCharCode(byte));\n  });\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Long\n  ? string | number | Long\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"cosmos.crypto.multisig.v1beta1\";\n\n/**\n * MultiSignature wraps the signatures from a multisig.LegacyAminoPubKey.\n * See cosmos.tx.v1betata1.ModeInfo.Multi for how to specify which signers\n * signed and with which modes.\n */\nexport interface MultiSignature {\n  signatures: Uint8Array[];\n}\n\n/**\n * CompactBitArray is an implementation of a space efficient bit array.\n * This is used to ensure that the encoded data takes up a minimal amount of\n * space after proto encoding.\n * This is not thread safe, and is not intended for concurrent usage.\n */\nexport interface CompactBitArray {\n  extraBitsStored: number;\n  elems: Uint8Array;\n}\n\nfunction createBaseMultiSignature(): MultiSignature {\n  return { signatures: [] };\n}\n\nexport const MultiSignature = {\n  encode(\n    message: MultiSignature,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.signatures) {\n      writer.uint32(10).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): MultiSignature {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMultiSignature();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MultiSignature {\n    return {\n      signatures: Array.isArray(object?.signatures)\n        ? object.signatures.map((e: any) => bytesFromBase64(e))\n        : [],\n    };\n  },\n\n  toJSON(message: MultiSignature): unknown {\n    const obj: any = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map((e) =>\n        base64FromBytes(e !== undefined ? e : new Uint8Array())\n      );\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<MultiSignature>, I>>(\n    object: I\n  ): MultiSignature {\n    const message = createBaseMultiSignature();\n    message.signatures = object.signatures?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseCompactBitArray(): CompactBitArray {\n  return { extraBitsStored: 0, elems: new Uint8Array() };\n}\n\nexport const CompactBitArray = {\n  encode(\n    message: CompactBitArray,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.extraBitsStored !== 0) {\n      writer.uint32(8).uint32(message.extraBitsStored);\n    }\n    if (message.elems.length !== 0) {\n      writer.uint32(18).bytes(message.elems);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): CompactBitArray {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCompactBitArray();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.extraBitsStored = reader.uint32();\n          break;\n        case 2:\n          message.elems = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): CompactBitArray {\n    return {\n      extraBitsStored: isSet(object.extraBitsStored)\n        ? Number(object.extraBitsStored)\n        : 0,\n      elems: isSet(object.elems)\n        ? bytesFromBase64(object.elems)\n        : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: CompactBitArray): unknown {\n    const obj: any = {};\n    message.extraBitsStored !== undefined &&\n      (obj.extraBitsStored = Math.round(message.extraBitsStored));\n    message.elems !== undefined &&\n      (obj.elems = base64FromBytes(\n        message.elems !== undefined ? message.elems : new Uint8Array()\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<CompactBitArray>, I>>(\n    object: I\n  ): CompactBitArray {\n    const message = createBaseCompactBitArray();\n    message.extraBitsStored = object.extraBitsStored ?? 0;\n    message.elems = object.elems ?? new Uint8Array();\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob ||\n  ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa ||\n  ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  arr.forEach((byte) => {\n    bin.push(String.fromCharCode(byte));\n  });\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Long\n  ? string | number | Long\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { CompactBitArray } from \"../../../crypto/multisig/v1beta1/multisig\";\n\nexport const protobufPackage = \"cosmos.tx.signing.v1beta1\";\n\n/** SignMode represents a signing mode with its own security guarantees. */\nexport enum SignMode {\n  /**\n   * SIGN_MODE_UNSPECIFIED - SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\n   * rejected\n   */\n  SIGN_MODE_UNSPECIFIED = 0,\n  /**\n   * SIGN_MODE_DIRECT - SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\n   * verified with raw bytes from Tx\n   */\n  SIGN_MODE_DIRECT = 1,\n  /**\n   * SIGN_MODE_TEXTUAL - SIGN_MODE_TEXTUAL is a future signing mode that will verify some\n   * human-readable textual representation on top of the binary representation\n   * from SIGN_MODE_DIRECT\n   */\n  SIGN_MODE_TEXTUAL = 2,\n  /**\n   * SIGN_MODE_LEGACY_AMINO_JSON - SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n   * Amino JSON and will be removed in the future\n   */\n  SIGN_MODE_LEGACY_AMINO_JSON = 127,\n  UNRECOGNIZED = -1,\n}\n\nexport function signModeFromJSON(object: any): SignMode {\n  switch (object) {\n    case 0:\n    case \"SIGN_MODE_UNSPECIFIED\":\n      return SignMode.SIGN_MODE_UNSPECIFIED;\n    case 1:\n    case \"SIGN_MODE_DIRECT\":\n      return SignMode.SIGN_MODE_DIRECT;\n    case 2:\n    case \"SIGN_MODE_TEXTUAL\":\n      return SignMode.SIGN_MODE_TEXTUAL;\n    case 127:\n    case \"SIGN_MODE_LEGACY_AMINO_JSON\":\n      return SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n    case -1:\n    case \"UNRECOGNIZED\":\n    default:\n      return SignMode.UNRECOGNIZED;\n  }\n}\n\nexport function signModeToJSON(object: SignMode): string {\n  switch (object) {\n    case SignMode.SIGN_MODE_UNSPECIFIED:\n      return \"SIGN_MODE_UNSPECIFIED\";\n    case SignMode.SIGN_MODE_DIRECT:\n      return \"SIGN_MODE_DIRECT\";\n    case SignMode.SIGN_MODE_TEXTUAL:\n      return \"SIGN_MODE_TEXTUAL\";\n    case SignMode.SIGN_MODE_LEGACY_AMINO_JSON:\n      return \"SIGN_MODE_LEGACY_AMINO_JSON\";\n    case SignMode.UNRECOGNIZED:\n    default:\n      return \"UNRECOGNIZED\";\n  }\n}\n\n/** SignatureDescriptors wraps multiple SignatureDescriptor's. */\nexport interface SignatureDescriptors {\n  /** signatures are the signature descriptors */\n  signatures: SignatureDescriptor[];\n}\n\n/**\n * SignatureDescriptor is a convenience type which represents the full data for\n * a signature including the public key of the signer, signing modes and the\n * signature itself. It is primarily used for coordinating signatures between\n * clients.\n */\nexport interface SignatureDescriptor {\n  /** public_key is the public key of the signer */\n  publicKey?: Any;\n  data?: SignatureDescriptor_Data;\n  /**\n   * sequence is the sequence of the account, which describes the\n   * number of committed transactions signed by a given address. It is used to\n   * prevent replay attacks.\n   */\n  sequence: Long;\n}\n\n/** Data represents signature data */\nexport interface SignatureDescriptor_Data {\n  /** single represents a single signer */\n  single?: SignatureDescriptor_Data_Single | undefined;\n  /** multi represents a multisig signer */\n  multi?: SignatureDescriptor_Data_Multi | undefined;\n}\n\n/** Single is the signature data for a single signer */\nexport interface SignatureDescriptor_Data_Single {\n  /** mode is the signing mode of the single signer */\n  mode: SignMode;\n  /** signature is the raw signature bytes */\n  signature: Uint8Array;\n}\n\n/** Multi is the signature data for a multisig public key */\nexport interface SignatureDescriptor_Data_Multi {\n  /** bitarray specifies which keys within the multisig are signing */\n  bitarray?: CompactBitArray;\n  /** signatures is the signatures of the multi-signature */\n  signatures: SignatureDescriptor_Data[];\n}\n\nfunction createBaseSignatureDescriptors(): SignatureDescriptors {\n  return { signatures: [] };\n}\n\nexport const SignatureDescriptors = {\n  encode(\n    message: SignatureDescriptors,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.signatures) {\n      SignatureDescriptor.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): SignatureDescriptors {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptors();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(\n            SignatureDescriptor.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignatureDescriptors {\n    return {\n      signatures: Array.isArray(object?.signatures)\n        ? object.signatures.map((e: any) => SignatureDescriptor.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: SignatureDescriptors): unknown {\n    const obj: any = {};\n    if (message.signatures) {\n      obj.signatures = message.signatures.map((e) =>\n        e ? SignatureDescriptor.toJSON(e) : undefined\n      );\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SignatureDescriptors>, I>>(\n    object: I\n  ): SignatureDescriptors {\n    const message = createBaseSignatureDescriptors();\n    message.signatures =\n      object.signatures?.map((e) => SignatureDescriptor.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseSignatureDescriptor(): SignatureDescriptor {\n  return { publicKey: undefined, data: undefined, sequence: Long.UZERO };\n}\n\nexport const SignatureDescriptor = {\n  encode(\n    message: SignatureDescriptor,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.publicKey !== undefined) {\n      Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.data !== undefined) {\n      SignatureDescriptor_Data.encode(\n        message.data,\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): SignatureDescriptor {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.data = SignatureDescriptor_Data.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 3:\n          message.sequence = reader.uint64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignatureDescriptor {\n    return {\n      publicKey: isSet(object.publicKey)\n        ? Any.fromJSON(object.publicKey)\n        : undefined,\n      data: isSet(object.data)\n        ? SignatureDescriptor_Data.fromJSON(object.data)\n        : undefined,\n      sequence: isSet(object.sequence)\n        ? Long.fromValue(object.sequence)\n        : Long.UZERO,\n    };\n  },\n\n  toJSON(message: SignatureDescriptor): unknown {\n    const obj: any = {};\n    message.publicKey !== undefined &&\n      (obj.publicKey = message.publicKey\n        ? Any.toJSON(message.publicKey)\n        : undefined);\n    message.data !== undefined &&\n      (obj.data = message.data\n        ? SignatureDescriptor_Data.toJSON(message.data)\n        : undefined);\n    message.sequence !== undefined &&\n      (obj.sequence = (message.sequence || Long.UZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SignatureDescriptor>, I>>(\n    object: I\n  ): SignatureDescriptor {\n    const message = createBaseSignatureDescriptor();\n    message.publicKey =\n      object.publicKey !== undefined && object.publicKey !== null\n        ? Any.fromPartial(object.publicKey)\n        : undefined;\n    message.data =\n      object.data !== undefined && object.data !== null\n        ? SignatureDescriptor_Data.fromPartial(object.data)\n        : undefined;\n    message.sequence =\n      object.sequence !== undefined && object.sequence !== null\n        ? Long.fromValue(object.sequence)\n        : Long.UZERO;\n    return message;\n  },\n};\n\nfunction createBaseSignatureDescriptor_Data(): SignatureDescriptor_Data {\n  return { single: undefined, multi: undefined };\n}\n\nexport const SignatureDescriptor_Data = {\n  encode(\n    message: SignatureDescriptor_Data,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.single !== undefined) {\n      SignatureDescriptor_Data_Single.encode(\n        message.single,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    if (message.multi !== undefined) {\n      SignatureDescriptor_Data_Multi.encode(\n        message.multi,\n        writer.uint32(18).fork()\n      ).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): SignatureDescriptor_Data {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = SignatureDescriptor_Data_Single.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        case 2:\n          message.multi = SignatureDescriptor_Data_Multi.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignatureDescriptor_Data {\n    return {\n      single: isSet(object.single)\n        ? SignatureDescriptor_Data_Single.fromJSON(object.single)\n        : undefined,\n      multi: isSet(object.multi)\n        ? SignatureDescriptor_Data_Multi.fromJSON(object.multi)\n        : undefined,\n    };\n  },\n\n  toJSON(message: SignatureDescriptor_Data): unknown {\n    const obj: any = {};\n    message.single !== undefined &&\n      (obj.single = message.single\n        ? SignatureDescriptor_Data_Single.toJSON(message.single)\n        : undefined);\n    message.multi !== undefined &&\n      (obj.multi = message.multi\n        ? SignatureDescriptor_Data_Multi.toJSON(message.multi)\n        : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SignatureDescriptor_Data>, I>>(\n    object: I\n  ): SignatureDescriptor_Data {\n    const message = createBaseSignatureDescriptor_Data();\n    message.single =\n      object.single !== undefined && object.single !== null\n        ? SignatureDescriptor_Data_Single.fromPartial(object.single)\n        : undefined;\n    message.multi =\n      object.multi !== undefined && object.multi !== null\n        ? SignatureDescriptor_Data_Multi.fromPartial(object.multi)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseSignatureDescriptor_Data_Single(): SignatureDescriptor_Data_Single {\n  return { mode: 0, signature: new Uint8Array() };\n}\n\nexport const SignatureDescriptor_Data_Single = {\n  encode(\n    message: SignatureDescriptor_Data_Single,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): SignatureDescriptor_Data_Single {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Single();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32() as any;\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignatureDescriptor_Data_Single {\n    return {\n      mode: isSet(object.mode) ? signModeFromJSON(object.mode) : 0,\n      signature: isSet(object.signature)\n        ? bytesFromBase64(object.signature)\n        : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: SignatureDescriptor_Data_Single): unknown {\n    const obj: any = {};\n    message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n    message.signature !== undefined &&\n      (obj.signature = base64FromBytes(\n        message.signature !== undefined ? message.signature : new Uint8Array()\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SignatureDescriptor_Data_Single>, I>>(\n    object: I\n  ): SignatureDescriptor_Data_Single {\n    const message = createBaseSignatureDescriptor_Data_Single();\n    message.mode = object.mode ?? 0;\n    message.signature = object.signature ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseSignatureDescriptor_Data_Multi(): SignatureDescriptor_Data_Multi {\n  return { bitarray: undefined, signatures: [] };\n}\n\nexport const SignatureDescriptor_Data_Multi = {\n  encode(\n    message: SignatureDescriptor_Data_Multi,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.bitarray !== undefined) {\n      CompactBitArray.encode(\n        message.bitarray,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    for (const v of message.signatures) {\n      SignatureDescriptor_Data.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number\n  ): SignatureDescriptor_Data_Multi {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signatures.push(\n            SignatureDescriptor_Data.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignatureDescriptor_Data_Multi {\n    return {\n      bitarray: isSet(object.bitarray)\n        ? CompactBitArray.fromJSON(object.bitarray)\n        : undefined,\n      signatures: Array.isArray(object?.signatures)\n        ? object.signatures.map((e: any) =>\n            SignatureDescriptor_Data.fromJSON(e)\n          )\n        : [],\n    };\n  },\n\n  toJSON(message: SignatureDescriptor_Data_Multi): unknown {\n    const obj: any = {};\n    message.bitarray !== undefined &&\n      (obj.bitarray = message.bitarray\n        ? CompactBitArray.toJSON(message.bitarray)\n        : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map((e) =>\n        e ? SignatureDescriptor_Data.toJSON(e) : undefined\n      );\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SignatureDescriptor_Data_Multi>, I>>(\n    object: I\n  ): SignatureDescriptor_Data_Multi {\n    const message = createBaseSignatureDescriptor_Data_Multi();\n    message.bitarray =\n      object.bitarray !== undefined && object.bitarray !== null\n        ? CompactBitArray.fromPartial(object.bitarray)\n        : undefined;\n    message.signatures =\n      object.signatures?.map((e) => SignatureDescriptor_Data.fromPartial(e)) ||\n      [];\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob ||\n  ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa ||\n  ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  arr.forEach((byte) => {\n    bin.push(String.fromCharCode(byte));\n  });\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Long\n  ? string | number | Long\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\n\nexport const protobufPackage = \"cosmos.base.v1beta1\";\n\n/**\n * Coin defines a token with a denomination and an amount.\n *\n * NOTE: The amount field is an Int which implements the custom method\n * signatures required by gogoproto.\n */\nexport interface Coin {\n  denom: string;\n  amount: string;\n}\n\n/**\n * DecCoin defines a token with a denomination and a decimal amount.\n *\n * NOTE: The amount field is an Dec which implements the custom method\n * signatures required by gogoproto.\n */\nexport interface DecCoin {\n  denom: string;\n  amount: string;\n}\n\n/** IntProto defines a Protobuf wrapper around an Int object. */\nexport interface IntProto {\n  int: string;\n}\n\n/** DecProto defines a Protobuf wrapper around a Dec object. */\nexport interface DecProto {\n  dec: string;\n}\n\nfunction createBaseCoin(): Coin {\n  return { denom: \"\", amount: \"\" };\n}\n\nexport const Coin = {\n  encode(message: Coin, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(18).string(message.amount);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Coin {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCoin();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.amount = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Coin {\n    return {\n      denom: isSet(object.denom) ? String(object.denom) : \"\",\n      amount: isSet(object.amount) ? String(object.amount) : \"\",\n    };\n  },\n\n  toJSON(message: Coin): unknown {\n    const obj: any = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.amount !== undefined && (obj.amount = message.amount);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Coin>, I>>(object: I): Coin {\n    const message = createBaseCoin();\n    message.denom = object.denom ?? \"\";\n    message.amount = object.amount ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseDecCoin(): DecCoin {\n  return { denom: \"\", amount: \"\" };\n}\n\nexport const DecCoin = {\n  encode(\n    message: DecCoin,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.denom !== \"\") {\n      writer.uint32(10).string(message.denom);\n    }\n    if (message.amount !== \"\") {\n      writer.uint32(18).string(message.amount);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DecCoin {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDecCoin();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.denom = reader.string();\n          break;\n        case 2:\n          message.amount = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DecCoin {\n    return {\n      denom: isSet(object.denom) ? String(object.denom) : \"\",\n      amount: isSet(object.amount) ? String(object.amount) : \"\",\n    };\n  },\n\n  toJSON(message: DecCoin): unknown {\n    const obj: any = {};\n    message.denom !== undefined && (obj.denom = message.denom);\n    message.amount !== undefined && (obj.amount = message.amount);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<DecCoin>, I>>(object: I): DecCoin {\n    const message = createBaseDecCoin();\n    message.denom = object.denom ?? \"\";\n    message.amount = object.amount ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseIntProto(): IntProto {\n  return { int: \"\" };\n}\n\nexport const IntProto = {\n  encode(\n    message: IntProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.int !== \"\") {\n      writer.uint32(10).string(message.int);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): IntProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIntProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.int = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): IntProto {\n    return {\n      int: isSet(object.int) ? String(object.int) : \"\",\n    };\n  },\n\n  toJSON(message: IntProto): unknown {\n    const obj: any = {};\n    message.int !== undefined && (obj.int = message.int);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<IntProto>, I>>(object: I): IntProto {\n    const message = createBaseIntProto();\n    message.int = object.int ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseDecProto(): DecProto {\n  return { dec: \"\" };\n}\n\nexport const DecProto = {\n  encode(\n    message: DecProto,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.dec !== \"\") {\n      writer.uint32(10).string(message.dec);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DecProto {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDecProto();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.dec = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DecProto {\n    return {\n      dec: isSet(object.dec) ? String(object.dec) : \"\",\n    };\n  },\n\n  toJSON(message: DecProto): unknown {\n    const obj: any = {};\n    message.dec !== undefined && (obj.dec = message.dec);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<DecProto>, I>>(object: I): DecProto {\n    const message = createBaseDecProto();\n    message.dec = object.dec ?? \"\";\n    return message;\n  },\n};\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Long\n  ? string | number | Long\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","/* eslint-disable */\nimport Long from \"long\";\nimport * as _m0 from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport {\n  SignMode,\n  signModeFromJSON,\n  signModeToJSON,\n} from \"../signing/v1beta1/signing\";\nimport { CompactBitArray } from \"../../crypto/multisig/v1beta1/multisig\";\nimport { Coin } from \"../../base/v1beta1/coin\";\n\nexport const protobufPackage = \"cosmos.tx.v1beta1\";\n\n/** Tx is the standard type used for broadcasting transactions. */\nexport interface Tx {\n  /** body is the processable content of the transaction */\n  body?: TxBody;\n  /**\n   * auth_info is the authorization related content of the transaction,\n   * specifically signers, signer modes and fee\n   */\n  authInfo?: AuthInfo;\n  /**\n   * signatures is a list of signatures that matches the length and order of\n   * AuthInfo's signer_infos to allow connecting signature meta information like\n   * public key and signing mode by position.\n   */\n  signatures: Uint8Array[];\n}\n\n/**\n * TxRaw is a variant of Tx that pins the signer's exact binary representation\n * of body and auth_info. This is used for signing, broadcasting and\n * verification. The binary `serialize(tx: TxRaw)` is stored in Tendermint and\n * the hash `sha256(serialize(tx: TxRaw))` becomes the \"txhash\", commonly used\n * as the transaction ID.\n */\nexport interface TxRaw {\n  /**\n   * body_bytes is a protobuf serialization of a TxBody that matches the\n   * representation in SignDoc.\n   */\n  bodyBytes: Uint8Array;\n  /**\n   * auth_info_bytes is a protobuf serialization of an AuthInfo that matches the\n   * representation in SignDoc.\n   */\n  authInfoBytes: Uint8Array;\n  /**\n   * signatures is a list of signatures that matches the length and order of\n   * AuthInfo's signer_infos to allow connecting signature meta information like\n   * public key and signing mode by position.\n   */\n  signatures: Uint8Array[];\n}\n\n/** SignDoc is the type used for generating sign bytes for SIGN_MODE_DIRECT. */\nexport interface SignDoc {\n  /**\n   * body_bytes is protobuf serialization of a TxBody that matches the\n   * representation in TxRaw.\n   */\n  bodyBytes: Uint8Array;\n  /**\n   * auth_info_bytes is a protobuf serialization of an AuthInfo that matches the\n   * representation in TxRaw.\n   */\n  authInfoBytes: Uint8Array;\n  /**\n   * chain_id is the unique identifier of the chain this transaction targets.\n   * It prevents signed transactions from being used on another chain by an\n   * attacker\n   */\n  chainId: string;\n  /** account_number is the account number of the account in state */\n  accountNumber: Long;\n}\n\n/** TxBody is the body of a transaction that all signers sign over. */\nexport interface TxBody {\n  /**\n   * messages is a list of messages to be executed. The required signers of\n   * those messages define the number and order of elements in AuthInfo's\n   * signer_infos and Tx's signatures. Each required signer address is added to\n   * the list only the first time it occurs.\n   * By convention, the first required signer (usually from the first message)\n   * is referred to as the primary signer and pays the fee for the whole\n   * transaction.\n   */\n  messages: Any[];\n  /**\n   * memo is any arbitrary note/comment to be added to the transaction.\n   * WARNING: in clients, any publicly exposed text should not be called memo,\n   * but should be called `note` instead (see\n   * https://github.com/cosmos/cosmos-sdk/issues/9122).\n   */\n  memo: string;\n  /**\n   * timeout is the block height after which this transaction will not\n   * be processed by the chain\n   */\n  timeoutHeight: Long;\n  /**\n   * extension_options are arbitrary options that can be added by chains\n   * when the default options are not sufficient. If any of these are present\n   * and can't be handled, the transaction will be rejected\n   */\n  extensionOptions: Any[];\n  /**\n   * extension_options are arbitrary options that can be added by chains\n   * when the default options are not sufficient. If any of these are present\n   * and can't be handled, they will be ignored\n   */\n  nonCriticalExtensionOptions: Any[];\n}\n\n/**\n * AuthInfo describes the fee and signer modes that are used to sign a\n * transaction.\n */\nexport interface AuthInfo {\n  /**\n   * signer_infos defines the signing modes for the required signers. The number\n   * and order of elements must match the required signers from TxBody's\n   * messages. The first element is the primary signer and the one which pays\n   * the fee.\n   */\n  signerInfos: SignerInfo[];\n  /**\n   * Fee is the fee and gas limit for the transaction. The first signer is the\n   * primary signer and the one which pays the fee. The fee can be calculated\n   * based on the cost of evaluating the body and doing signature verification\n   * of the signers. This can be estimated via simulation.\n   */\n  fee?: Fee;\n}\n\n/**\n * SignerInfo describes the public key and signing mode of a single top-level\n * signer.\n */\nexport interface SignerInfo {\n  /**\n   * public_key is the public key of the signer. It is optional for accounts\n   * that already exist in state. If unset, the verifier can use the required \\\n   * signer address for this position and lookup the public key.\n   */\n  publicKey?: Any;\n  /**\n   * mode_info describes the signing mode of the signer and is a nested\n   * structure to support nested multisig pubkey's\n   */\n  modeInfo?: ModeInfo;\n  /**\n   * sequence is the sequence of the account, which describes the\n   * number of committed transactions signed by a given address. It is used to\n   * prevent replay attacks.\n   */\n  sequence: Long;\n}\n\n/** ModeInfo describes the signing mode of a single or nested multisig signer. */\nexport interface ModeInfo {\n  /** single represents a single signer */\n  single?: ModeInfo_Single | undefined;\n  /** multi represents a nested multisig signer */\n  multi?: ModeInfo_Multi | undefined;\n}\n\n/**\n * Single is the mode info for a single signer. It is structured as a message\n * to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the\n * future\n */\nexport interface ModeInfo_Single {\n  /** mode is the signing mode of the single signer */\n  mode: SignMode;\n}\n\n/** Multi is the mode info for a multisig public key */\nexport interface ModeInfo_Multi {\n  /** bitarray specifies which keys within the multisig are signing */\n  bitarray?: CompactBitArray;\n  /**\n   * mode_infos is the corresponding modes of the signers of the multisig\n   * which could include nested multisig public keys\n   */\n  modeInfos: ModeInfo[];\n}\n\n/**\n * Fee includes the amount of coins paid in fees and the maximum\n * gas to be used by the transaction. The ratio yields an effective \"gasprice\",\n * which must be above some miminum to be accepted into the mempool.\n */\nexport interface Fee {\n  /** amount is the amount of coins to be paid as a fee */\n  amount: Coin[];\n  /**\n   * gas_limit is the maximum gas that can be used in transaction processing\n   * before an out of gas error occurs\n   */\n  gasLimit: Long;\n  /**\n   * if unset, the first signer is responsible for paying the fees. If set, the\n   * specified account must pay the fees. the payer must be a tx signer (and\n   * thus have signed this field in AuthInfo). setting this field does *not*\n   * change the ordering of required signers for the transaction.\n   */\n  payer: string;\n  /**\n   * if set, the fee payer (either the first signer or the value of the payer\n   * field) requests that a fee grant be used to pay fees instead of the fee\n   * payer's own balance. If an appropriate fee grant does not exist or the\n   * chain does not support fee grants, this will fail\n   */\n  granter: string;\n}\n\nfunction createBaseTx(): Tx {\n  return { body: undefined, authInfo: undefined, signatures: [] };\n}\n\nexport const Tx = {\n  encode(message: Tx, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.body !== undefined) {\n      TxBody.encode(message.body, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.authInfo !== undefined) {\n      AuthInfo.encode(message.authInfo, writer.uint32(18).fork()).ldelim();\n    }\n    for (const v of message.signatures) {\n      writer.uint32(26).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Tx {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseTx();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.body = TxBody.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.authInfo = AuthInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Tx {\n    return {\n      body: isSet(object.body) ? TxBody.fromJSON(object.body) : undefined,\n      authInfo: isSet(object.authInfo)\n        ? AuthInfo.fromJSON(object.authInfo)\n        : undefined,\n      signatures: Array.isArray(object?.signatures)\n        ? object.signatures.map((e: any) => bytesFromBase64(e))\n        : [],\n    };\n  },\n\n  toJSON(message: Tx): unknown {\n    const obj: any = {};\n    message.body !== undefined &&\n      (obj.body = message.body ? TxBody.toJSON(message.body) : undefined);\n    message.authInfo !== undefined &&\n      (obj.authInfo = message.authInfo\n        ? AuthInfo.toJSON(message.authInfo)\n        : undefined);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map((e) =>\n        base64FromBytes(e !== undefined ? e : new Uint8Array())\n      );\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Tx>, I>>(object: I): Tx {\n    const message = createBaseTx();\n    message.body =\n      object.body !== undefined && object.body !== null\n        ? TxBody.fromPartial(object.body)\n        : undefined;\n    message.authInfo =\n      object.authInfo !== undefined && object.authInfo !== null\n        ? AuthInfo.fromPartial(object.authInfo)\n        : undefined;\n    message.signatures = object.signatures?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseTxRaw(): TxRaw {\n  return {\n    bodyBytes: new Uint8Array(),\n    authInfoBytes: new Uint8Array(),\n    signatures: [],\n  };\n}\n\nexport const TxRaw = {\n  encode(message: TxRaw, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n    for (const v of message.signatures) {\n      writer.uint32(26).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): TxRaw {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseTxRaw();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n        case 3:\n          message.signatures.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): TxRaw {\n    return {\n      bodyBytes: isSet(object.bodyBytes)\n        ? bytesFromBase64(object.bodyBytes)\n        : new Uint8Array(),\n      authInfoBytes: isSet(object.authInfoBytes)\n        ? bytesFromBase64(object.authInfoBytes)\n        : new Uint8Array(),\n      signatures: Array.isArray(object?.signatures)\n        ? object.signatures.map((e: any) => bytesFromBase64(e))\n        : [],\n    };\n  },\n\n  toJSON(message: TxRaw): unknown {\n    const obj: any = {};\n    message.bodyBytes !== undefined &&\n      (obj.bodyBytes = base64FromBytes(\n        message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()\n      ));\n    message.authInfoBytes !== undefined &&\n      (obj.authInfoBytes = base64FromBytes(\n        message.authInfoBytes !== undefined\n          ? message.authInfoBytes\n          : new Uint8Array()\n      ));\n    if (message.signatures) {\n      obj.signatures = message.signatures.map((e) =>\n        base64FromBytes(e !== undefined ? e : new Uint8Array())\n      );\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<TxRaw>, I>>(object: I): TxRaw {\n    const message = createBaseTxRaw();\n    message.bodyBytes = object.bodyBytes ?? new Uint8Array();\n    message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();\n    message.signatures = object.signatures?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseSignDoc(): SignDoc {\n  return {\n    bodyBytes: new Uint8Array(),\n    authInfoBytes: new Uint8Array(),\n    chainId: \"\",\n    accountNumber: Long.UZERO,\n  };\n}\n\nexport const SignDoc = {\n  encode(\n    message: SignDoc,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.bodyBytes.length !== 0) {\n      writer.uint32(10).bytes(message.bodyBytes);\n    }\n    if (message.authInfoBytes.length !== 0) {\n      writer.uint32(18).bytes(message.authInfoBytes);\n    }\n    if (message.chainId !== \"\") {\n      writer.uint32(26).string(message.chainId);\n    }\n    if (!message.accountNumber.isZero()) {\n      writer.uint32(32).uint64(message.accountNumber);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): SignDoc {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignDoc();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bodyBytes = reader.bytes();\n          break;\n        case 2:\n          message.authInfoBytes = reader.bytes();\n          break;\n        case 3:\n          message.chainId = reader.string();\n          break;\n        case 4:\n          message.accountNumber = reader.uint64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignDoc {\n    return {\n      bodyBytes: isSet(object.bodyBytes)\n        ? bytesFromBase64(object.bodyBytes)\n        : new Uint8Array(),\n      authInfoBytes: isSet(object.authInfoBytes)\n        ? bytesFromBase64(object.authInfoBytes)\n        : new Uint8Array(),\n      chainId: isSet(object.chainId) ? String(object.chainId) : \"\",\n      accountNumber: isSet(object.accountNumber)\n        ? Long.fromValue(object.accountNumber)\n        : Long.UZERO,\n    };\n  },\n\n  toJSON(message: SignDoc): unknown {\n    const obj: any = {};\n    message.bodyBytes !== undefined &&\n      (obj.bodyBytes = base64FromBytes(\n        message.bodyBytes !== undefined ? message.bodyBytes : new Uint8Array()\n      ));\n    message.authInfoBytes !== undefined &&\n      (obj.authInfoBytes = base64FromBytes(\n        message.authInfoBytes !== undefined\n          ? message.authInfoBytes\n          : new Uint8Array()\n      ));\n    message.chainId !== undefined && (obj.chainId = message.chainId);\n    message.accountNumber !== undefined &&\n      (obj.accountNumber = (message.accountNumber || Long.UZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SignDoc>, I>>(object: I): SignDoc {\n    const message = createBaseSignDoc();\n    message.bodyBytes = object.bodyBytes ?? new Uint8Array();\n    message.authInfoBytes = object.authInfoBytes ?? new Uint8Array();\n    message.chainId = object.chainId ?? \"\";\n    message.accountNumber =\n      object.accountNumber !== undefined && object.accountNumber !== null\n        ? Long.fromValue(object.accountNumber)\n        : Long.UZERO;\n    return message;\n  },\n};\n\nfunction createBaseTxBody(): TxBody {\n  return {\n    messages: [],\n    memo: \"\",\n    timeoutHeight: Long.UZERO,\n    extensionOptions: [],\n    nonCriticalExtensionOptions: [],\n  };\n}\n\nexport const TxBody = {\n  encode(\n    message: TxBody,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.messages) {\n      Any.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.memo !== \"\") {\n      writer.uint32(18).string(message.memo);\n    }\n    if (!message.timeoutHeight.isZero()) {\n      writer.uint32(24).uint64(message.timeoutHeight);\n    }\n    for (const v of message.extensionOptions) {\n      Any.encode(v!, writer.uint32(8186).fork()).ldelim();\n    }\n    for (const v of message.nonCriticalExtensionOptions) {\n      Any.encode(v!, writer.uint32(16378).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): TxBody {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseTxBody();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.messages.push(Any.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.memo = reader.string();\n          break;\n        case 3:\n          message.timeoutHeight = reader.uint64() as Long;\n          break;\n        case 1023:\n          message.extensionOptions.push(Any.decode(reader, reader.uint32()));\n          break;\n        case 2047:\n          message.nonCriticalExtensionOptions.push(\n            Any.decode(reader, reader.uint32())\n          );\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): TxBody {\n    return {\n      messages: Array.isArray(object?.messages)\n        ? object.messages.map((e: any) => Any.fromJSON(e))\n        : [],\n      memo: isSet(object.memo) ? String(object.memo) : \"\",\n      timeoutHeight: isSet(object.timeoutHeight)\n        ? Long.fromValue(object.timeoutHeight)\n        : Long.UZERO,\n      extensionOptions: Array.isArray(object?.extensionOptions)\n        ? object.extensionOptions.map((e: any) => Any.fromJSON(e))\n        : [],\n      nonCriticalExtensionOptions: Array.isArray(\n        object?.nonCriticalExtensionOptions\n      )\n        ? object.nonCriticalExtensionOptions.map((e: any) => Any.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: TxBody): unknown {\n    const obj: any = {};\n    if (message.messages) {\n      obj.messages = message.messages.map((e) =>\n        e ? Any.toJSON(e) : undefined\n      );\n    } else {\n      obj.messages = [];\n    }\n    message.memo !== undefined && (obj.memo = message.memo);\n    message.timeoutHeight !== undefined &&\n      (obj.timeoutHeight = (message.timeoutHeight || Long.UZERO).toString());\n    if (message.extensionOptions) {\n      obj.extensionOptions = message.extensionOptions.map((e) =>\n        e ? Any.toJSON(e) : undefined\n      );\n    } else {\n      obj.extensionOptions = [];\n    }\n    if (message.nonCriticalExtensionOptions) {\n      obj.nonCriticalExtensionOptions = message.nonCriticalExtensionOptions.map(\n        (e) => (e ? Any.toJSON(e) : undefined)\n      );\n    } else {\n      obj.nonCriticalExtensionOptions = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<TxBody>, I>>(object: I): TxBody {\n    const message = createBaseTxBody();\n    message.messages = object.messages?.map((e) => Any.fromPartial(e)) || [];\n    message.memo = object.memo ?? \"\";\n    message.timeoutHeight =\n      object.timeoutHeight !== undefined && object.timeoutHeight !== null\n        ? Long.fromValue(object.timeoutHeight)\n        : Long.UZERO;\n    message.extensionOptions =\n      object.extensionOptions?.map((e) => Any.fromPartial(e)) || [];\n    message.nonCriticalExtensionOptions =\n      object.nonCriticalExtensionOptions?.map((e) => Any.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseAuthInfo(): AuthInfo {\n  return { signerInfos: [], fee: undefined };\n}\n\nexport const AuthInfo = {\n  encode(\n    message: AuthInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    for (const v of message.signerInfos) {\n      SignerInfo.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.fee !== undefined) {\n      Fee.encode(message.fee, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): AuthInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAuthInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.signerInfos.push(SignerInfo.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.fee = Fee.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): AuthInfo {\n    return {\n      signerInfos: Array.isArray(object?.signerInfos)\n        ? object.signerInfos.map((e: any) => SignerInfo.fromJSON(e))\n        : [],\n      fee: isSet(object.fee) ? Fee.fromJSON(object.fee) : undefined,\n    };\n  },\n\n  toJSON(message: AuthInfo): unknown {\n    const obj: any = {};\n    if (message.signerInfos) {\n      obj.signerInfos = message.signerInfos.map((e) =>\n        e ? SignerInfo.toJSON(e) : undefined\n      );\n    } else {\n      obj.signerInfos = [];\n    }\n    message.fee !== undefined &&\n      (obj.fee = message.fee ? Fee.toJSON(message.fee) : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<AuthInfo>, I>>(object: I): AuthInfo {\n    const message = createBaseAuthInfo();\n    message.signerInfos =\n      object.signerInfos?.map((e) => SignerInfo.fromPartial(e)) || [];\n    message.fee =\n      object.fee !== undefined && object.fee !== null\n        ? Fee.fromPartial(object.fee)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseSignerInfo(): SignerInfo {\n  return { publicKey: undefined, modeInfo: undefined, sequence: Long.UZERO };\n}\n\nexport const SignerInfo = {\n  encode(\n    message: SignerInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.publicKey !== undefined) {\n      Any.encode(message.publicKey, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.modeInfo !== undefined) {\n      ModeInfo.encode(message.modeInfo, writer.uint32(18).fork()).ldelim();\n    }\n    if (!message.sequence.isZero()) {\n      writer.uint32(24).uint64(message.sequence);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): SignerInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSignerInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.publicKey = Any.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.modeInfo = ModeInfo.decode(reader, reader.uint32());\n          break;\n        case 3:\n          message.sequence = reader.uint64() as Long;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SignerInfo {\n    return {\n      publicKey: isSet(object.publicKey)\n        ? Any.fromJSON(object.publicKey)\n        : undefined,\n      modeInfo: isSet(object.modeInfo)\n        ? ModeInfo.fromJSON(object.modeInfo)\n        : undefined,\n      sequence: isSet(object.sequence)\n        ? Long.fromValue(object.sequence)\n        : Long.UZERO,\n    };\n  },\n\n  toJSON(message: SignerInfo): unknown {\n    const obj: any = {};\n    message.publicKey !== undefined &&\n      (obj.publicKey = message.publicKey\n        ? Any.toJSON(message.publicKey)\n        : undefined);\n    message.modeInfo !== undefined &&\n      (obj.modeInfo = message.modeInfo\n        ? ModeInfo.toJSON(message.modeInfo)\n        : undefined);\n    message.sequence !== undefined &&\n      (obj.sequence = (message.sequence || Long.UZERO).toString());\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SignerInfo>, I>>(\n    object: I\n  ): SignerInfo {\n    const message = createBaseSignerInfo();\n    message.publicKey =\n      object.publicKey !== undefined && object.publicKey !== null\n        ? Any.fromPartial(object.publicKey)\n        : undefined;\n    message.modeInfo =\n      object.modeInfo !== undefined && object.modeInfo !== null\n        ? ModeInfo.fromPartial(object.modeInfo)\n        : undefined;\n    message.sequence =\n      object.sequence !== undefined && object.sequence !== null\n        ? Long.fromValue(object.sequence)\n        : Long.UZERO;\n    return message;\n  },\n};\n\nfunction createBaseModeInfo(): ModeInfo {\n  return { single: undefined, multi: undefined };\n}\n\nexport const ModeInfo = {\n  encode(\n    message: ModeInfo,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.single !== undefined) {\n      ModeInfo_Single.encode(message.single, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.multi !== undefined) {\n      ModeInfo_Multi.encode(message.multi, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ModeInfo {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseModeInfo();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.single = ModeInfo_Single.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.multi = ModeInfo_Multi.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ModeInfo {\n    return {\n      single: isSet(object.single)\n        ? ModeInfo_Single.fromJSON(object.single)\n        : undefined,\n      multi: isSet(object.multi)\n        ? ModeInfo_Multi.fromJSON(object.multi)\n        : undefined,\n    };\n  },\n\n  toJSON(message: ModeInfo): unknown {\n    const obj: any = {};\n    message.single !== undefined &&\n      (obj.single = message.single\n        ? ModeInfo_Single.toJSON(message.single)\n        : undefined);\n    message.multi !== undefined &&\n      (obj.multi = message.multi\n        ? ModeInfo_Multi.toJSON(message.multi)\n        : undefined);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ModeInfo>, I>>(object: I): ModeInfo {\n    const message = createBaseModeInfo();\n    message.single =\n      object.single !== undefined && object.single !== null\n        ? ModeInfo_Single.fromPartial(object.single)\n        : undefined;\n    message.multi =\n      object.multi !== undefined && object.multi !== null\n        ? ModeInfo_Multi.fromPartial(object.multi)\n        : undefined;\n    return message;\n  },\n};\n\nfunction createBaseModeInfo_Single(): ModeInfo_Single {\n  return { mode: 0 };\n}\n\nexport const ModeInfo_Single = {\n  encode(\n    message: ModeInfo_Single,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ModeInfo_Single {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseModeInfo_Single();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32() as any;\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ModeInfo_Single {\n    return {\n      mode: isSet(object.mode) ? signModeFromJSON(object.mode) : 0,\n    };\n  },\n\n  toJSON(message: ModeInfo_Single): unknown {\n    const obj: any = {};\n    message.mode !== undefined && (obj.mode = signModeToJSON(message.mode));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ModeInfo_Single>, I>>(\n    object: I\n  ): ModeInfo_Single {\n    const message = createBaseModeInfo_Single();\n    message.mode = object.mode ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseModeInfo_Multi(): ModeInfo_Multi {\n  return { bitarray: undefined, modeInfos: [] };\n}\n\nexport const ModeInfo_Multi = {\n  encode(\n    message: ModeInfo_Multi,\n    writer: _m0.Writer = _m0.Writer.create()\n  ): _m0.Writer {\n    if (message.bitarray !== undefined) {\n      CompactBitArray.encode(\n        message.bitarray,\n        writer.uint32(10).fork()\n      ).ldelim();\n    }\n    for (const v of message.modeInfos) {\n      ModeInfo.encode(v!, writer.uint32(18).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ModeInfo_Multi {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseModeInfo_Multi();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.bitarray = CompactBitArray.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.modeInfos.push(ModeInfo.decode(reader, reader.uint32()));\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ModeInfo_Multi {\n    return {\n      bitarray: isSet(object.bitarray)\n        ? CompactBitArray.fromJSON(object.bitarray)\n        : undefined,\n      modeInfos: Array.isArray(object?.modeInfos)\n        ? object.modeInfos.map((e: any) => ModeInfo.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ModeInfo_Multi): unknown {\n    const obj: any = {};\n    message.bitarray !== undefined &&\n      (obj.bitarray = message.bitarray\n        ? CompactBitArray.toJSON(message.bitarray)\n        : undefined);\n    if (message.modeInfos) {\n      obj.modeInfos = message.modeInfos.map((e) =>\n        e ? ModeInfo.toJSON(e) : undefined\n      );\n    } else {\n      obj.modeInfos = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ModeInfo_Multi>, I>>(\n    object: I\n  ): ModeInfo_Multi {\n    const message = createBaseModeInfo_Multi();\n    message.bitarray =\n      object.bitarray !== undefined && object.bitarray !== null\n        ? CompactBitArray.fromPartial(object.bitarray)\n        : undefined;\n    message.modeInfos =\n      object.modeInfos?.map((e) => ModeInfo.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseFee(): Fee {\n  return { amount: [], gasLimit: Long.UZERO, payer: \"\", granter: \"\" };\n}\n\nexport const Fee = {\n  encode(message: Fee, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.amount) {\n      Coin.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    if (!message.gasLimit.isZero()) {\n      writer.uint32(16).uint64(message.gasLimit);\n    }\n    if (message.payer !== \"\") {\n      writer.uint32(26).string(message.payer);\n    }\n    if (message.granter !== \"\") {\n      writer.uint32(34).string(message.granter);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Fee {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFee();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.amount.push(Coin.decode(reader, reader.uint32()));\n          break;\n        case 2:\n          message.gasLimit = reader.uint64() as Long;\n          break;\n        case 3:\n          message.payer = reader.string();\n          break;\n        case 4:\n          message.granter = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Fee {\n    return {\n      amount: Array.isArray(object?.amount)\n        ? object.amount.map((e: any) => Coin.fromJSON(e))\n        : [],\n      gasLimit: isSet(object.gasLimit)\n        ? Long.fromValue(object.gasLimit)\n        : Long.UZERO,\n      payer: isSet(object.payer) ? String(object.payer) : \"\",\n      granter: isSet(object.granter) ? String(object.granter) : \"\",\n    };\n  },\n\n  toJSON(message: Fee): unknown {\n    const obj: any = {};\n    if (message.amount) {\n      obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n    } else {\n      obj.amount = [];\n    }\n    message.gasLimit !== undefined &&\n      (obj.gasLimit = (message.gasLimit || Long.UZERO).toString());\n    message.payer !== undefined && (obj.payer = message.payer);\n    message.granter !== undefined && (obj.granter = message.granter);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<Fee>, I>>(object: I): Fee {\n    const message = createBaseFee();\n    message.amount = object.amount?.map((e) => Coin.fromPartial(e)) || [];\n    message.gasLimit =\n      object.gasLimit !== undefined && object.gasLimit !== null\n        ? Long.fromValue(object.gasLimit)\n        : Long.UZERO;\n    message.payer = object.payer ?? \"\";\n    message.granter = object.granter ?? \"\";\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob ||\n  ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa ||\n  ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  arr.forEach((byte) => {\n    bin.push(String.fromCharCode(byte));\n  });\n  return btoa(bin.join(\"\"));\n}\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Long\n  ? string | number | Long\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","import { Keccak } from \"sha3\";\nimport invariant from \"tiny-invariant\";\nimport { APIClient } from \"../index\";\nimport { Buffer } from \"buffer\";\nimport { CONFIG_CHAIN_SOPHON } from \"../constants\";\nimport {\n  EncodeObject,\n  GeneratedType,\n  OfflineSigner,\n  Registry,\n  TxBodyEncodeObject,\n} from \"@cosmjs/proto-signing\";\nimport { Any } from \"cosmjs-types/google/protobuf/any\";\nimport {\n  BaseMsg,\n  MsgCollect,\n  MsgCollectReward,\n  MsgCreatePool,\n  MsgCreatePosition,\n  MsgDecreaseLiquidity,\n  MsgIncreaseLiquidity,\n  MsgSwapExactIn,\n  MsgSwapExactOut,\n} from \"../msgs\";\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { PubKey } from \"../proto/cosmos/crypto/secp256k1/keys\";\nimport {\n  SignerInfo,\n  ModeInfo,\n  ModeInfo_Single,\n  TxBody,\n  Fee,\n  AuthInfo,\n  SignDoc,\n  TxRaw,\n} from \"../proto/cosmos/tx/v1beta1/tx\";\nimport { SignMode } from \"../proto/cosmos/tx/signing/v1beta1/signing\";\nimport { Coin } from \"../proto/cosmos/base/v1beta1/coin\";\nimport { fromBase64 } from \"@cosmjs/encoding\";\n\nexport interface ISender {\n  address: string;\n  pubkey: string;\n  accountNumber: number;\n  sequence: number;\n}\n\n// FIXME\nexport interface TxGenerated {\n  signDirect: {\n    body: TxBodyEncodeObject;\n    authInfo: AuthInfo;\n    signBytes: string;\n  };\n}\n\nexport const SIGN_DIRECT = SignMode.SIGN_MODE_DIRECT;\n\n// const defaultFee: StdFee = {\n//   amount: [],\n//   gas: CONFIG_CHAIN_SOPHON.DEFAULT_GAS,\n// };\n\nconst defaultFee = {\n  amount: \"\",\n  denom: CONFIG_CHAIN_SOPHON.COIN_DENOM,\n  gas: CONFIG_CHAIN_SOPHON.DEFAULT_GAS as number,\n};\n\nexport class TxClient {\n  public apiClient: APIClient;\n  public rpcUrl: string;\n  public accountAddress: string;\n  public signer: OfflineSigner;\n  public registry: Registry;\n\n  // public walletClient: SigningStargateClient | null = null;\n  // public sender: ISender | null = null;\n\n  constructor(\n    apiClient: APIClient,\n    rpcUrl: string,\n    signer: OfflineSigner,\n    accountAddress: string\n  ) {\n    invariant(!!signer, \"wallet is required!\");\n\n    this.apiClient = apiClient;\n    this.rpcUrl = rpcUrl;\n    this.signer = signer;\n    this.accountAddress = accountAddress;\n\n    const registryTypes = new Map<string, GeneratedType>();\n    registryTypes.set(MsgCollect.typeUrl, MsgCollect.Proto);\n    registryTypes.set(MsgCollectReward.typeUrl, MsgCollectReward.Proto);\n    registryTypes.set(MsgCreatePool.typeUrl, MsgCreatePool.Proto);\n    registryTypes.set(MsgCreatePosition.typeUrl, MsgCreatePosition.Proto);\n    registryTypes.set(MsgDecreaseLiquidity.typeUrl, MsgDecreaseLiquidity.Proto);\n    registryTypes.set(MsgIncreaseLiquidity.typeUrl, MsgIncreaseLiquidity.Proto);\n    registryTypes.set(MsgSwapExactIn.typeUrl, MsgSwapExactIn.Proto);\n    registryTypes.set(MsgSwapExactOut.typeUrl, MsgSwapExactOut.Proto);\n\n    this.registry = new Registry(registryTypes);\n  }\n\n  public async getSender(): Promise<ISender> {\n    const { authAPI } = this.apiClient;\n    const {\n      account: {\n        base_account: {\n          pub_key: { key },\n          account_number,\n          sequence,\n        },\n      },\n    } = await authAPI.apiAccountInfo(this.accountAddress);\n    return {\n      address: this.accountAddress,\n      pubkey: key,\n      accountNumber: parseInt(account_number),\n      sequence: parseInt(sequence),\n    } as ISender;\n  }\n\n  public async sendTransaction(\n    messages: BaseMsg | Array<BaseMsg>,\n    memo: string = \"\"\n    // fee: string,\n    // denom: string,\n    // gasLimit: number,\n  ) {\n    const sender = await this.getSender();\n    const pubKeyDecoded = Buffer.from(sender.pubkey, \"base64\");\n\n    // 1. SignDirect\n    const signInfoDirect = createSignerInfo(\n      new Uint8Array(pubKeyDecoded),\n      sender.sequence,\n      SIGN_DIRECT\n    );\n\n    // 2. Fee\n    const feeMessage = createFee(\n      defaultFee.amount,\n      defaultFee.denom,\n      defaultFee.gas\n    );\n\n    // 3. authInfo\n    const authInfoDirect = createAuthInfo(signInfoDirect, feeMessage);\n\n    // console.log(AuthInfo.encode(authInfoDirect).finish());\n\n    // 4. txbody\n    // const body = createBodyWithMultipleMessages(messages, memo);\n    const _messages = messages instanceof Array ? messages : [messages];\n    const body = createTxBodyEncodeObject(_messages, memo);\n\n    // 5. signDoc\n    const signDocDirect = createSigDoc(\n      this.registry.encode(body),\n      AuthInfo.encode(authInfoDirect).finish(),\n      CONFIG_CHAIN_SOPHON.CHAIN_ID,\n      sender.accountNumber\n    );\n\n    let walletClient;\n    walletClient = await SigningStargateClient.connectWithSigner(\n      this.rpcUrl,\n      this.signer,\n      {\n        registry: this.registry,\n        prefix: CONFIG_CHAIN_SOPHON.COIN_MINIMAL_DENOM.toLowerCase(),\n      }\n    );\n    // @ts-ignore\n    const { signed, signature } = await walletClient.signer.signDirect(\n      this.accountAddress,\n      signDocDirect\n    );\n\n    const txRaw = TxRaw.fromPartial({\n      bodyBytes: signed.bodyBytes,\n      authInfoBytes: signed.authInfoBytes,\n      signatures: [fromBase64(signature.signature)],\n    });\n    const txBytes = TxRaw.encode(txRaw).finish();\n\n    return walletClient.broadcastTx(txBytes);\n  }\n\n  // public async signTransaction(\n  //   tx: TxGenerated,\n  //   broadcastMode: string = 'BROADCAST_MODE_BLOCK',\n  // ) {\n  //   const dataToSign = `0x${Buffer.from(\n  //     tx.signDirect.signBytes,\n  //     'base64',\n  //   ).toString('hex')}`\n  //\n  //   /* eslint-disable no-underscore-dangle */\n  //   const signatureRaw = wallet._signingKey().signDigest(dataToSign)\n  //   const splitedSignature = splitSignature(signatureRaw)\n  //   const signature = arrayify(concat([splitedSignature.r, splitedSignature.s]))\n  //\n  //   const signedTx = createTxRaw(\n  //     tx.signDirect.body.serializeBinary(),\n  //     tx.signDirect.authInfo.serializeBinary(),\n  //     [signature],\n  //   )\n  //   const body = `{ \"tx_bytes\": [${signedTx.message\n  //     .serializeBinary()\n  //     .toString()}], \"mode\": \"${broadcastMode}\" }`\n  //\n  //   return body\n  // }\n}\n\nexport function createTxBodyEncodeObject(\n  messages: Array<BaseMsg>,\n  memo: string\n): TxBodyEncodeObject {\n  const results = messages.map((item) => {\n    return item.generateMessage();\n  });\n  return {\n    typeUrl: \"/cosmos.tx.v1beta1.TxBody\",\n    value: {\n      messages: results,\n      memo: memo,\n    },\n  };\n}\n\nexport function createSigDoc(\n  bodyBytes: Uint8Array,\n  authInfoBytes: Uint8Array,\n  chainId: string,\n  accountNumber: number\n) {\n  return SignDoc.fromPartial({\n    bodyBytes,\n    authInfoBytes,\n    chainId,\n    accountNumber,\n  });\n}\n\nfunction createAuthInfo(signerInfo: SignerInfo, fee: Fee) {\n  return AuthInfo.fromPartial({\n    signerInfos: [signerInfo],\n    fee,\n  });\n}\n\nfunction createFee(fee: string, denom: string, gasLimit: number) {\n  return Fee.fromPartial({\n    amount: [\n      Coin.fromPartial({\n        denom,\n        amount: fee,\n      }),\n    ],\n    gasLimit,\n  });\n}\n\nfunction createSignerInfo(\n  publicKey: Uint8Array,\n  sequence: number,\n  mode: number\n) {\n  const pubkey = Any.fromPartial({\n    typeUrl: \"/ethermint.crypto.v1.ethsecp256k1.PubKey\",\n    value: PubKey.encode({\n      key: publicKey,\n    }).finish(),\n  });\n  const signerInfo = SignerInfo.fromPartial({\n    publicKey: pubkey,\n    modeInfo: ModeInfo.fromPartial({\n      single: ModeInfo_Single.fromPartial({\n        mode,\n      }),\n    }),\n    sequence,\n  });\n\n  return signerInfo;\n}\n"],"names":["APIRequester","baseURL","axios","Axios","create","headers","Accept","timeout","get","endpoint","params","then","d","data","post","BaseAPI","request","BankAPI","apiTokenBalance","token","accountAddress","denom","apiAccountBalance","AuthAPI","apiAccountInfo","SwapAPI","apiPoolListByAddresses","addresses","join","apiPoolMetadataByAddress","address","apiPoolMetadataPriceByAddress","apiLiquidityPositionById","tokenId","apiLiquidityRewardsByIds","tokenIds","apiTickImagePath","apiActiveFarmList","apiLiquidityPositionList","TxAPI","txInfo","txHash","_broadcast","tx","mode","broadcast","to32","value","arr","split","len","length","result","forEach","item","push","i","unshift","deepCopy","source","JSON","parse","stringify","encrypt","prefix","suffix","substr","creator","name","symbol","totalSupply","decimal","logoURI","findTokenByDenom","tokenDenom","tokens","DEFAULT_TOKEN_LIST","find","findTokenBySymbol","toUpperCase","ONE_DAY_TO_SECONDS","ONE_YEAR_TO_DAYS","Fee_Amount","FEE_AMOUNT_DETAIL","LOW","label","description","MEDIUM","HIGH","ETH","BSC","OEC","HOO","XDAI","HECO","POLYGON","FANTOM","KCC","AVALANCHE","SOPHON","ETH_CHAIN_NAME","BSC_CHAIN_NAME","OEC_CHAIN_NAME","HOO_CHAIN_NAME","XDAI_CHAIN_NAME","HECO_CHAIN_NAME","POLYGON_CHAIN_NAME","FANTOM_CHAIN_NAME","KCC_CHAIN_NAME","AVALANCHE_CHAIN_NAME","SOPHON_TEST_CHAIN_NAME","ETH_NETWORK_ID","BSC_NETWORK_ID","BSC_NETWORK_TEST_ID","OEC_NETWORK_ID","HOO_NETWORK_ID","XDAI_NETWORK_ID","HECO_NETWORK_ID","POLYGON_NETWORK_ID","FANTOM_NETWORK_ID","KCC_NETWORK_ID","AVALANCHE_NETWORK_ID","ETH_TEST_NETWORK_ID","SOPHON_TEST_NETWORK_ID","ETH_CHAIN_ID","BSC_CHAIN_ID","BSC_CHAIN_ID_TEST","OEC_CHAIN_ID","HOO_CHAIN_ID","XDAI_CHAIN_ID","HECO_CHAIN_ID","POLYGON_CHAIN_ID","FANTOM_CHAIN_ID","KCC_CHAIN_ID","AVALANCHE_CHAIN_ID","SOPHON_TEST_CHAIN_ID","ETH_SYMBOL","BNB_SYMBOL","OKT_SYMBOL","HOO_SYMBOL","XDAI_SYMBOL","HT_SYMBOL","POLYGON_SYMBOL","FANTOM_SYMBOL","KCC_SYMBOL","AVALANCHE_SYMBOL","SOPHON_SYMBOL","SUPPORTED_CHAIN_IDS","NETWORK_MAP","networkId","chainId","chainName","providerType","ticker","CONFIG_CHAIN_SOPHON","RPC_URL","REST_URL","EXPLORER_URL","NETWORK_NAME","NETWORK_TYPE","CHAIN_ID","CHAIN_NAME","COIN_DENOM","COIN_MINIMAL_DENOM","COIN_DECIMALS","PREFIX","COIN_TYPE","COINGECKO_ID","DEFAULT_GAS","GAS_PRICE_STEP_LOW","GAS_PRICE_STEP_AVERAGE","GAS_PRICE_STEP_HIGH","FEATURES","CHAIN_ETH","CHAIN_SOP","ZERO","DEFAULT_USER_PRECISION","DEFAULT_PRECISION","MAX_PRECISION","REG_NUMBER","RegExp","REG_DECIMAL_SIMPLE","REG_DECIMAL","TICK_SPACINGS","BASE_UNIT_TICK","toDecimalPlaces","precision","Decimal","ROUND_UP","toString","e","String","toAmountString","roundingMode","ROUND_DOWN","toSignificantDigits","toAmountFloor","toAmountCeil","toAmountFee","isEmptyAmount","_value","mul","Math","pow","floor","isZero","toExactAmount","CosmosDecimal","fromUserInput","formatNumber","seperator","fixed","div","toFixed","moment","locale","formatMoment","pattern","format","formatUnixMoment","formatTime","time","formatDiffTime","fromNow","toUsd","getPoolAddress","denom0","denom1","fee","key","Bech32","encode","sha256","toUtf8","slice","getPercentByFeeAmount","isNumeric","isNaN","parseFloat","checkInputNumber","test","plus","value1","value2","minus","multipliedBy","isGreaterThan","greaterThanOrEqualTo","isLessThan","lessThan","isEqualTo","equals","pow18","round","ceil","powM18","shift","isPositive","greaterThan","objectToMap","Map","Object","entries","arrayToMap","array","property","map","set","sortsBefore","baseToken","quoteToken","toLowerCase","percentage","toPercent","decimalNumber","number","replace","int","float","Number","Bound","Tip_Level","Swap_Direction","Transaction_Status","longToNumber","long","gt","MAX_SAFE_INTEGER","globalThis","Error","toNumber","LiquidityMath","getRightSideLiquidity","leftRangeValue","rightRangeValue","priceValue","amount","numerator","_value1","sqrt","_value2","denominator","sub","getLeftSideLiquidity","getLiquidityFromAmount0","amount0","pc","deltaX","_getDiverForDeltaX","lower","upper","_getDiverForDeltaY","getLiquidityFromAmount1","amount1","deltaY","getAmount1FromAmount0","token0","liquidity","console","log","getAmount0FromAmount1","token1","getAmountByLiquidity","deltaXDiver","deltaYDiver","TickMath","priceToClosestTick","price","log2","getNearestTickByPrice","feeAmount","trim","INVALID_TICK","MIN_TICK_VALUE","MIN_TICK","MAX_TICK_VALUE","MAX_TICK","tick","nearestUsableTick","getFormattedPriceByTick","isLowestTick","isHighestTick","base","getPriceByTick","getNearestPriceByInput","nearestTick","getPriceBySqrtPrice","sqrtPrice","getSqrtPriceByPrice","getBaseTickRange","fromToken","toToken","leftRange","rightRange","tickLower","tickUpper","getNearestLowestTick","getNearestHighestTick","getNearestPricesByFullTick","lowestPrice","highestPrice","highestTick","lowestTick","tickSpacing","rounded","TransactionLooper","status","onTransactionSuccess","transactionHash","counter","APIClient","URL","apiRequester","bankAPI","authAPI","swapAPI","txAPI","nodeUrl","BaseMsg","protobufPackage","createBaseMsgCreatePool","MsgCreatePool","message","writer","_m0","uint32","string","int32","decode","input","reader","end","undefined","pos","tag","skipType","fromJSON","object","isSet","toJSON","obj","fromPartial","createBaseMsgCreatePosition","amount0Desired","amount1Desired","amount0Min","amount1Min","recipient","deadline","Long","MsgCreatePosition","int64","fromValue","createBaseMsgIncreaseLiquidity","MsgIncreaseLiquidity","createBaseMsgDecreaseLiquidity","MsgDecreaseLiquidity","createBaseMsgCollect","amount0Max","amount1Max","collectOnly","MsgCollect","bool","Boolean","createBaseMsgSwapExactIn","amountIn","amountOutMin","denoms","fees","MsgSwapExactIn","v","fork","ldelim","end2","Array","isArray","createBaseMsgSwapExactOut","amountOut","amountInMax","MsgSwapExactOut","createBaseMsgCollectReward","MsgCollectReward","msg","protoMsg","generateMessage","typeUrl","MsgCollectReward_pb","MsgSwapExactOut_pb","MsgSwapExactIn_pb","MsgCreatePool_pb","MsgCollect_pb","MsgCreatePosition_pb","MsgDecreaseLiquidity_pb","MsgIncreaseLiquidity_pb","createBasePubKey","Uint8Array","PubKey","bytes","bytesFromBase64","base64FromBytes","self","window","global","atob","b64","Buffer","from","bin","charCodeAt","btoa","byte","fromCharCode","createBaseAny","Any","createBaseCompactBitArray","extraBitsStored","elems","CompactBitArray","SignMode","signModeFromJSON","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_LEGACY_AMINO_JSON","UNRECOGNIZED","signModeToJSON","createBaseCoin","Coin","createBaseTxRaw","bodyBytes","authInfoBytes","signatures","TxRaw","createBaseSignDoc","accountNumber","UZERO","SignDoc","uint64","createBaseAuthInfo","signerInfos","AuthInfo","SignerInfo","Fee","createBaseSignerInfo","publicKey","modeInfo","sequence","ModeInfo","createBaseModeInfo","single","multi","ModeInfo_Single","ModeInfo_Multi","createBaseModeInfo_Single","createBaseModeInfo_Multi","bitarray","modeInfos","createBaseFee","gasLimit","payer","granter","SIGN_DIRECT","defaultFee","gas","TxClient","apiClient","rpcUrl","signer","registry","invariant","registryTypes","Proto","Registry","getSender","account","base_account","pub_key","account_number","pubkey","parseInt","sendTransaction","messages","memo","sender","pubKeyDecoded","signInfoDirect","createSignerInfo","feeMessage","createFee","authInfoDirect","createAuthInfo","_messages","body","createTxBodyEncodeObject","signDocDirect","createSigDoc","finish","SigningStargateClient","connectWithSigner","walletClient","signDirect","signed","signature","txRaw","fromBase64","txBytes","broadcastTx","results","signerInfo"],"mappings":"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"}